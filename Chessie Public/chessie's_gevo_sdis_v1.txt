@name Chessie's GEVO SDIS V1
@inputs RLCPT:entity EGPL:wirelink EGPR:wirelink CtlTable:table Consist_Data:table Number:string On FuelLevel
@outputs BrakeCutIn FeedPressure
@persist SpeedRedline SpeedYellowline Railroad:string LPage RPage LPageVar RPageVar Distance LastSaid:string Active D:wirelink LTopVisible RTopVisible DistMode NewBrakeCutIn NewIsolatedBraking NewFeedPressure IsolatedBraking
@persist CountDown DistCountDown Dist InputDigit:string DistDigits:table DistReady FuelCap
@trigger On

if(first()|dupefinished()|(~EGPL|~EGPR|~Number)){
    EGPL:egpClear()
    EGPR:egpClear()
    #Config
    Railroad="R&K" #Railroad name
    SpeedRedline=68 #Redline of your speedometer
    SpeedYellowline=66 #Yellowline of your speedometer
    FuelCap=5000 #Max capacity of your fuel tank
    #End of Config
    
    
    LPage=0
    LPageVar=0
    LastSaid=""
    FeedPressure=90
    NewFeedPressure=90
    DistMode=0
    CountDown=0
    DistReady=0
    
    #Funcs
    function void wirelink:egpBoxLabeled(Index, Pos:vector2, Size:vector2, Label:string, Color:vector){
        local E = This
        local LabLenPix = (Label:length()*5)+9
        
        E:egpBoxOutline(Index, vec2((Pos:x() + Size:x() / 2), (Pos:y() + Size:y() / 2)), Size)
        E:egpColor(Index,Color)
        E:egpBox(Index + 1, vec2(Pos:x() + (Size:x() / 2), Pos:y()), vec2(LabLenPix, 15))
        E:egpColor(Index + 1, vec(0))
        E:egpTextLayout(Index + 2, Label, vec2(Pos:x(), Pos:y() - 13), vec2(Size:x(), 24))
        E:egpFont(Index + 2, "Arial", 12)
        E:egpAlign(Index + 2, 1, 1)
        E:egpColor(Index + 2,Color)
    }
    
    function void wirelink:egpButton(A,Name:string,Pos:vector2,Size:vector2,Color:vector){
        local E=This
        E:egpBox(A,vec2(Pos:x()+Size:x()/2,Pos:y()+Size:y()/2),Size)
        E:egpColor(A,Color)
        E:egpTextLayout(A+1,Name,Pos,Size)
        E:egpColor(A+1,vec(0))
        E:egpAlign(A+1,1,1)
        E:egpSize(A+1,12)
        E:egpFont(A+1,"Arial")
        E:egpBoxOutline(A+2,vec2(Pos:x()+Size:x()/2,Pos:y()+Size:y()/2),Size)
        E:egpColor(A+2,vec(0))
    }
    
    #Display Top Portion

    function void wirelink:egpTopUpdate(){
    local D=This
    #Speedometer
    A=1
    D:egpWedge(A,vec2(256,80),vec2(64,64))
    D:egpColor(A,vec(255,200,35))
    D:egpSize(A,138+(SpeedYellowline*2.75))
    D:egpAngle(A,200-(SpeedYellowline*2.75))

    A=2
    D:egpWedge(A,vec2(256,80),vec2(64,64))
    D:egpColor(A,vec(255,50,40))
    D:egpSize(A,138+(SpeedRedline*2.75))
    D:egpAngle(A,200-(SpeedRedline*2.75))
    
    A=3
    D:egpCircle(A,vec2(256,80),vec2(62,62))
    D:egpColor(A,vec(0))
    
    A=4
    D:egpWedgeOutline(A,vec2(256,80),vec2(60,60))
    D:egpSize(A,140)
    D:egpAngle(A,200)
    
    A=5
    D:egpCircle(A,vec2(256,80),vec2(60-1,60-1))
    D:egpColor(A,vec(0))
    
    #5 marks
    A=6
    D:egpWedgeOutline(A,vec2(256,80),vec2(60,60))
    D:egpSize(A,-110+82.5)
    D:egpAngle(A,200-12.5)

    A=7
    D:egpWedgeOutline(A,vec2(256,80),vec2(60,60))
    D:egpSize(A,-110+55)
    D:egpAngle(A,200-12.5)
    
    A=8
    D:egpWedgeOutline(A,vec2(256,80),vec2(60,60))
    D:egpSize(A,-110+27.5)
    D:egpAngle(A,200-12.5)
    
    A=9
    D:egpWedgeOutline(A,vec2(256,80),vec2(60,60))
    D:egpSize(A,-110)
    D:egpAngle(A,200-12.5)
    
    A=10
    D:egpWedgeOutline(A,vec2(256,80),vec2(60,60))
    D:egpSize(A,-110-27.5)
    D:egpAngle(A,200-12.5)
    
    A=11
    D:egpWedgeOutline(A,vec2(256,80),vec2(60,60))
    D:egpSize(A,-110-55)
    D:egpAngle(A,200-12.5)
    
    A=12
    D:egpWedgeOutline(A,vec2(256,80),vec2(60,60))
    D:egpSize(A,-110-82.5)
    D:egpAngle(A,200-12.5)
    
    A=13
    D:egpCircle(A,vec2(256,80),vec2(60-4,60-4))
    D:egpColor(A,vec(0))
    
    #10 marks
    A=14
    D:egpWedgeOutline(A,vec2(256,80),vec2(60,60))
    D:egpSize(A,-110+82.5)
    D:egpAngle(A,200)

    A=15
    D:egpWedgeOutline(A,vec2(256,80),vec2(60,60))
    D:egpSize(A,-110+55)
    D:egpAngle(A,200)
    
    A=16
    D:egpWedgeOutline(A,vec2(256,80),vec2(60,60))
    D:egpSize(A,-110+27.5)
    D:egpAngle(A,200)
    
    A=17
    D:egpWedgeOutline(A,vec2(256,80),vec2(60,60))
    D:egpSize(A,-110)
    D:egpAngle(A,200)
    
    A=18
    D:egpWedgeOutline(18,vec2(256,80),vec2(60,60))
    D:egpSize(18,-110-27.5)
    D:egpAngle(18,200)
    
    A=19
    D:egpWedgeOutline(19,vec2(256,80),vec2(60,60))
    D:egpSize(19,-110-55)
    D:egpAngle(19,200)
    
    A=20
    D:egpWedgeOutline(20,vec2(256,80),vec2(60,60))
    D:egpSize(20,-110-82.5)
    D:egpAngle(20,200)
    
    A=21
    D:egpWedgeOutline(21,vec2(256,80),vec2(60,60))
    D:egpSize(21,-27.5)
    D:egpAngle(21,6.75)
    
    A=22
    D:egpCircle(22,vec2(256,80),vec2(60-8,60-8))
    D:egpColor(22,vec(0))
    
    #Pointer
    A=23
    D:egpCircle(A,vec2(256,80),vec2(4,4))
    A=24
    D:egpTriangle(A,vec2(0,-3),vec2(0,3),vec2(-45,0))
    D:egpParent(A,23)
    
    #Text (time to trig :D)
    A=25
    D:egpTextLayout(A,"40",vec2(256-25-(sin(0)*45),80-25-(cos(0)*45)),vec2(50,50))
    D:egpAlign(A,1,1)
    D:egpSize(A,10)
    
    A=26
    D:egpTextLayout(A,"30",vec2(256-25-(sin(27.5)*45),80-25-(cos(27.5)*45)),vec2(50,50))
    D:egpAlign(A,1,1)
    D:egpSize(A,10)
    
    A=27
    D:egpTextLayout(A,"20",vec2(256-25-(sin(55)*45),80-25-(cos(55)*45)),vec2(50,50))
    D:egpAlign(A,1,1)
    D:egpSize(A,10)
    
    A=28
    D:egpTextLayout(A,"10",vec2(256-25-(sin(82.5)*45),80-25-(cos(82.5)*45)),vec2(50,50))
    D:egpAlign(A,1,1)
    D:egpSize(A,10)
    
    A=29
    D:egpTextLayout(A,"0",vec2(256-25-(sin(110)*45),80-25-(cos(110)*45)),vec2(50,50))
    D:egpAlign(A,1,1)
    D:egpSize(A,10)
    
    A=30
    D:egpTextLayout(A,"50",vec2(256-25-(sin(-27.5)*45),80-25-(cos(-27.5)*45)),vec2(50,50))
    D:egpAlign(A,1,1)
    D:egpSize(A,10)
    
    A=31
    D:egpTextLayout(A,"60",vec2(256-25-(sin(-55)*45),80-25-(cos(-55)*45)),vec2(50,50))
    D:egpAlign(A,1,1)
    D:egpSize(A,10)
    
    A=32
    D:egpTextLayout(A,"70",vec2(256-25-(sin(-82.5)*45),80-25-(cos(-82.5)*45)),vec2(50,50))
    D:egpAlign(A,1,1)
    D:egpSize(A,10)
    
    A=33
    D:egpTextLayout(A,"80",vec2(256-25-(sin(-110)*45),80-25-(cos(-110)*45)),vec2(50,50))
    D:egpAlign(A,1,1)
    D:egpSize(A,10)
    
    A=34
    D:egpTextLayout(A,"0.00",vec2(256-50,90),vec2(100,50))
    D:egpAlign(A,1,1)
    D:egpSize(A,14)
    
    A=35
    D:egpTextLayout(A,"mph",vec2(250,72),vec2(100,50))
    D:egpAlign(A,1,2)
    D:egpSize(A,8)
    
    #Text Boxes
    D:egpBoxLabeled(36,vec2(10,20),vec2(84,64),"ER",vec(255))
    D:egpBoxLabeled(39,vec2(96,20),vec2(84,64),"BP",vec(255))
    D:egpBoxLabeled(42,vec2(10,92),vec2(40,34),"Rear",vec(255))
    D:egpBoxLabeled(45,vec2(10+44,92),vec2(40,34),"Flow",vec(255))
    D:egpBoxLabeled(48,vec2(96,92),vec2(40,34),"Main",vec(255))
    D:egpBoxLabeled(51,vec2(96+44,92),vec2(40,34),"BC",vec(255))
    D:egpBoxLabeled(54,vec2(330+55,20),vec2(55,30),"Distance",vec(255))
    D:egpBoxLabeled(57,vec2(330,20+38),vec2(110,30),"Consist",vec(255))
    D:egpBoxLabeled(60,vec2(330,20+38+38),vec2(110,30),"Effort Klb",vec(45,255,75))
    D:egpBoxLabeled(63,vec2(330+55+55+4,20),vec2(55,30),Railroad,vec(255))
    D:egpBoxLabeled(66,vec2(330+55+55+4,20+38),vec2(55,30),"Reverser",vec(255))
    D:egpBoxLabeled(69,vec2(330+55+55+4,20+38+38),vec2(55,30),"Throttle",vec(45,255,75))
    
    #Brake Texts
    D:egpTextLayout(72,"ER",vec2(10,20),vec2(84,64))
    D:egpAlign(72,1,1)
    D:egpSize(72,38)
    D:egpFont(72,"Arial")
    
    D:egpTextLayout(73,"BP",vec2(96,20),vec2(84,64))
    D:egpAlign(73,1,1)
    D:egpSize(73,38)
    D:egpFont(73,"Arial")
    
    D:egpTextLayout(74,"Rear",vec2(10,92),vec2(40,34))
    D:egpAlign(74,1,1)
    D:egpSize(74,14)
    D:egpFont(74,"Arial")
    
    D:egpTextLayout(75,"Flow",vec2(10+44,92),vec2(40,34))
    D:egpAlign(75,1,1)
    D:egpSize(75,14)
    D:egpFont(75,"Arial")
    
    D:egpTextLayout(76,"Main",vec2(96,92),vec2(40,34))
    D:egpAlign(76,1,1)
    D:egpSize(76,14)
    D:egpFont(76,"Arial")
    
    D:egpTextLayout(77,"BC",vec2(96+44,92),vec2(40,34))
    D:egpAlign(77,1,1)
    D:egpSize(77,14)
    D:egpFont(77,"Arial")
    
    #Throttle & Reverser Text
    D:egpTextLayout(78,"Throttle",vec2(330+55+55+4,20+38+38),vec2(55,30))
    D:egpAlign(78,1,1)
    D:egpSize(78,16)
    D:egpFont(78,"Arial")
    D:egpColor(78,vec(45,255,75))
    
    D:egpTextLayout(79,"Reverser",vec2(330+55+55+4,20+38),vec2(55,30))
    D:egpAlign(79,1,1)
    D:egpSize(79,16)
    D:egpFont(79,"Arial")
    D:egpColor(79,vec(255))
    
    #Tractive Effort
    D:egpTextLayout(80,"TE",vec2(296,20+38+38),vec2(110,30))
    D:egpAlign(80,1,1)
    D:egpSize(80,16)
    D:egpFont(80,"Arial")
    D:egpColor(80,vec(255))
    #TE Bar Graph
    D:egpBox(81,vec2(375,20+38+38+10),vec2(2,8))
    D:egpColor(81,vec(255))
    
    D:egpBox(82,vec2(373,20+38+38+10),vec2(4,8))
    D:egpColor(82,vec(0))
    
    D:egpBox(83,vec2(403,20+38+38+15),vec2(57,1))
    D:egpColor(83,vec(255))
    
    D:egpBox(84,vec2(403-56/2,20+38+38+17),vec2(4,1))
    D:egpColor(84,vec(255))
    D:egpAngle(84,90)
    
    D:egpBox(85,vec2(403+56/2,20+38+38+17),vec2(4,1))
    D:egpColor(85,vec(255))
    D:egpAngle(85,90)
    
    D:egpBox(86,vec2(403-56/6,20+38+38+17),vec2(4,1))
    D:egpColor(86,vec(255))
    D:egpAngle(86,90)
    
    D:egpBox(87,vec2(403+56/6,20+38+38+17),vec2(4,1))
    D:egpColor(87,vec(255))
    D:egpAngle(87,90)
    
    D:egpBox(88,vec2(403+3,20+38+38+16),vec2(2,1))
    D:egpColor(88,vec(255))
    D:egpAngle(88,90)
    
    D:egpBox(89,vec2(403-3,20+38+38+16),vec2(2,1))
    D:egpColor(89,vec(255))
    D:egpAngle(89,90)
    
    D:egpBox(90,vec2(403-10-6,20+38+38+16),vec2(2,1))
    D:egpColor(90,vec(255))
    D:egpAngle(90,90)
    
    D:egpBox(91,vec2(403-10-12,20+38+38+16),vec2(2,1))
    D:egpColor(91,vec(255))
    D:egpAngle(91,90)
    
    D:egpBox(92,vec2(403+10+6,20+38+38+16),vec2(2,1))
    D:egpColor(92,vec(255))
    D:egpAngle(92,90)
    
    D:egpBox(93,vec2(403+10+12,20+38+38+16),vec2(2,1))
    D:egpColor(93,vec(255))
    D:egpAngle(93,90)
    
    D:egpTextLayout(94,"0",vec2(403-56/2-5,20+38+38+19),vec2(10,10))
    D:egpAlign(94,1,1)
    D:egpFont(94,"Arial")
    D:egpColor(94,vec(255))
    D:egpSize(94,10)
    
    D:egpTextLayout(95,"6",vec2(403-56/6-5,20+38+38+19),vec2(10,10))
    D:egpAlign(95,1,1)
    D:egpFont(95,"Arial")
    D:egpColor(95,vec(255))
    D:egpSize(95,10)
    
    D:egpTextLayout(96,"12",vec2(403+56/6-5,20+38+38+19),vec2(10,10))
    D:egpAlign(96,1,1)
    D:egpFont(96,"Arial")
    D:egpColor(96,vec(255))
    D:egpSize(96,10)
    
    D:egpTextLayout(97,"18",vec2(403+56/2-5,20+38+38+19),vec2(10,10))
    D:egpAlign(97,1,1)
    D:egpFont(97,"Arial")
    D:egpColor(97,vec(255))
    D:egpSize(97,10)
    
    
    #Distance & Loco Number
    D:egpTextLayout(98,"0",vec2(330+55,20),vec2(55,30))
    D:egpAlign(98,1,1)
    D:egpFont(98,"Arial")
    D:egpColor(98,vec(255))
    D:egpSize(98,16)
    
    D:egpTextLayout(99,Number,vec2(330+114,20),vec2(55,30))
    D:egpAlign(99,1,1)
    D:egpFont(99,"Arial")
    D:egpColor(99,vec(255))
    D:egpSize(99,16)
    
    #Consist Effort
    D:egpTextLayout(100,"0:1",vec2(367,62),vec2(110,30))
    D:egpAlign(100,0,0)
    D:egpFont(100,"Arial")
    D:egpColor(100,vec(255))
    D:egpSize(100,12)
    
    D:egpTextLayout(101,"200",vec2(386,62),vec2(110,30))
    D:egpAlign(101,0,0)
    D:egpFont(101,"Arial")
    D:egpColor(101,vec(45,255,75))
    D:egpSize(101,12)
    
    D:egpTextLayout(102,"Lead:  Idle",vec2(336,74),vec2(110,30))
    D:egpAlign(102,0,0)
    D:egpFont(102,"Arial")
    D:egpColor(102,vec(255))
    D:egpSize(102,10)
    
    D:egpTextLayout(103,"Trail:  Idle",vec2(394,74),vec2(110,30))
    D:egpAlign(103,0,0)
    D:egpFont(103,"Arial")
    D:egpColor(103,vec(255))
    D:egpSize(103,10)
    
    #Messages & Levels & Screens
    D:egpBoxOutline(190,vec2(225,415),vec2(450,50))
    D:egpBoxOutline(191,vec2(512-62/2,415),vec2(63,50))
    D:egpBoxOutline(192,vec2(512-62/2,415),vec2(63,1))
    
    D:egpTextLayout(193,"L1",vec2((512-62/2)-31,415-25),vec2(63,25))
    D:egpAlign(193,1,1)
    D:egpColor(193,vec(235,245,255))
    D:egpFont(193,"Arial")
    
    D:egpTextLayout(194,"0000-0",vec2((512-62/2)-31,415),vec2(63,25))
    D:egpAlign(194,1,1)
    D:egpColor(194,vec(235,245,255))
    D:egpFont(194,"Arial")
    
    D:egpTextLayout(195,"Ready",vec2(2,415-27),vec2(450,50))
    D:egpAlign(195,0,2)
    D:egpColor(195,vec(255))
    D:egpFont(195,"Arial")
    D:egpSize(195,16)
    }
    timer("clk",500)
}
if(clk("clk")){
    Active=1
}
if(Active){
    

if(On){
    interval(100)
}
if(On&~On){
    EGPL:egpRemove(300)
    EGPR:egpRemove(300)
    LPage=0
    LPageVar=0
    RPage=0
    RPageVar=0
}
elseif(!On&~On){
    EGPL:egpBox(300,vec2(256),vec2(512))
    EGPL:egpColor(300,vec(0,0,0))

    EGPR:egpBox(300,vec2(256),vec2(512))
    EGPR:egpColor(300,vec(0,0,0))
}
RLCPTW=RLCPT:wirelink()
#Left Display Top
#Speedo
EGPL:egpAngle(23,20-(clamp(RLCPTW["MPH",number],0,80)*2.75))
EGPL:egpSetText(34,(RLCPTW["MPH",number]:toString()!="-0" ? (round(RLCPTW["MPH",number],2)<10 ? format("%.2f",RLCPTW["MPH",number]) : format("%.1f",RLCPTW["MPH",number])) : "0.00"))
#Brakes
EGPL:egpSetText(72,round(RLCPTW["EqualRes",number],0):toString())
EGPL:egpSetText(73,round(RLCPTW["BrakePipe",number],0):toString())
EGPL:egpSetText(74,"---")
EGPL:egpSetText(75,round(RLCPTW["CFM",number],0):toString())
EGPL:egpSetText(76,round(RLCPTW["MainRes",number],0):toString())
EGPL:egpSetText(77,round(RLCPTW["Cyl",number],0):toString())

#Throttle & Reverser
EGPL:egpSetText(78,!CtlTable["SetDynamics",number] ? CtlTable["SetThrottle",number]!=0 ? "N"+CtlTable["SetThrottle",number]/12.5 : "Idle" : 
CtlTable["SetDynamics",number]!=10 ? "D"+round(CtlTable["SetDynamics",number]/12.5,0):toString() : "Set")

EGPL:egpColor(69,(CtlTable["SetDynamics",number] ? vec(255,200,35) : vec(45,255,75)))
EGPL:egpColor(71,(CtlTable["SetDynamics",number] ? vec(255,200,35) : vec(45,255,75)))
EGPL:egpColor(78,(CtlTable["SetDynamics",number] ? vec(255,200,35) : vec(45,255,75)))

switch(CtlTable["SetReverser",number]){
    case -1,
        EGPL:egpSetText(79,"Rev")
    break
    case 0,
        EGPL:egpSetText(79,"Cntr")
    break
    case 1,
        EGPL:egpSetText(79,"Fwd")
    break
}

#Tractive Effort
EGPL:egpColor(60,(CtlTable["SetDynamics",number] ? vec(255,200,35) : vec(45,255,75)))
EGPL:egpColor(62,(CtlTable["SetDynamics",number] ? vec(255,200,35) : vec(45,255,75)))
EGPL:egpColor(80,(CtlTable["SetDynamics",number] ? vec(255,200,35) : vec(45,255,75)))
EGPL:egpColor(81,(CtlTable["SetDynamics",number] ? vec(255,200,35) : vec(45,255,75)))
EGPL:egpSetText(80,round(RLCPTW["TE_LBF",number]/1000):toString())

EGPL:egpPos(81,vec2(375+clamp(RLCPTW["TE_LBF",number],0,180000)/6300,20+38+38+10))
EGPL:egpSize(81,vec2(clamp(RLCPTW["TE_LBF",number],0,180000)/3150,8))

#Consist Effort
EGPL:egpSetText(100,Consist_Data[3,number]:toString()+":"+Consist_Data[2,number]:toString())
EGPL:egpSetText(101,round(Consist_Data[1,number]/1000):toString())
EGPL:egpColor(101,(CtlTable["SetDynamics",number] ? vec(255,200,35) : vec(45,255,75)))
EGPL:egpSetText(102,"Lead:  "+(!CtlTable["SetDynamics",number] ? CtlTable["SetThrottle",number]!=0 ? "N"+CtlTable["SetThrottle",number]/12.5 : "Idle" : 
CtlTable["SetDynamics",number]!=10 ? "D"+round(CtlTable["SetDynamics",number]/12.5,0):toString() : "Set"))
EGPL:egpSetText(103,"Trail:  "+(!CtlTable["SetDynamics",number] ? CtlTable["SetThrottle",number]!=0 ? "N"+CtlTable["SetThrottle",number]/12.5 : "Idle" : 
CtlTable["SetDynamics",number]!=10 ? "D"+round(CtlTable["SetDynamics",number]/12.5,0):toString() : "Set"))

#Distance
EGPL:egpSetText(98,floor(Dist):toString())





#Right Display Top
#Speedo
EGPR:egpAngle(23,20-(clamp(RLCPTW["MPH",number],0,80)*2.75))
EGPR:egpSetText(34,(RLCPTW["MPH",number]:toString()!="-0" ? (round(RLCPTW["MPH",number],2)<10 ? format("%.2f",RLCPTW["MPH",number]) : format("%.1f",RLCPTW["MPH",number])) : "0.00"))
#Brakes
EGPR:egpSetText(72,round(RLCPTW["EqualRes",number],0):toString())
EGPR:egpSetText(73,round(RLCPTW["BrakePipe",number],0):toString())
EGPR:egpSetText(74,"---")
EGPR:egpSetText(75,round(RLCPTW["CFM",number],0):toString())
EGPR:egpSetText(76,round(RLCPTW["MainRes",number],0):toString())
EGPR:egpSetText(77,round(RLCPTW["Cyl",number],0):toString())

#Throttle & Reverser
EGPR:egpSetText(78,!CtlTable["SetDynamics",number] ? CtlTable["SetThrottle",number]!=0 ? "N"+CtlTable["SetThrottle",number]/12.5 : "Idle" : 
CtlTable["SetDynamics",number]!=10 ? "D"+round(CtlTable["SetDynamics",number]/12.5,0):toString() : "Set")

EGPR:egpColor(69,(CtlTable["SetDynamics",number] ? vec(255,200,35) : vec(45,255,75)))
EGPR:egpColor(71,(CtlTable["SetDynamics",number] ? vec(255,200,35) : vec(45,255,75)))
EGPR:egpColor(78,(CtlTable["SetDynamics",number] ? vec(255,200,35) : vec(45,255,75)))

switch(CtlTable["SetReverser",number]){
    case -1,
        EGPR:egpSetText(79,"Rev")
    break
    case 0,
        EGPR:egpSetText(79,"Cntr")
    break
    case 1,
        EGPR:egpSetText(79,"Fwd")
    break
}

#Tractive Effort
EGPR:egpColor(60,(CtlTable["SetDynamics",number] ? vec(255,200,35) : vec(45,255,75)))
EGPR:egpColor(62,(CtlTable["SetDynamics",number] ? vec(255,200,35) : vec(45,255,75)))
EGPR:egpColor(80,(CtlTable["SetDynamics",number] ? vec(255,200,35) : vec(45,255,75)))
EGPR:egpColor(81,(CtlTable["SetDynamics",number] ? vec(255,200,35) : vec(45,255,75)))
EGPR:egpSetText(80,round(RLCPTW["TE_LBF",number]/1000):toString())

EGPR:egpPos(81,vec2(375+clamp(RLCPTW["TE_LBF",number],0,180000)/6300,20+38+38+10))
EGPR:egpSize(81,vec2(clamp(RLCPTW["TE_LBF",number],0,180000)/3150,8))

#Consist Effort
EGPR:egpSetText(100,Consist_Data[3,number]:toString()+":"+Consist_Data[2,number]:toString())
EGPR:egpSetText(101,round(Consist_Data[1,number]/1000):toString())
EGPR:egpColor(101,(CtlTable["SetDynamics",number] ? vec(255,200,35) : vec(45,255,75)))
EGPR:egpSetText(102,"Lead:  "+(!CtlTable["SetDynamics",number] ? CtlTable["SetThrottle",number]!=0 ? "N"+CtlTable["SetThrottle",number]/12.5 : "Idle" : 
CtlTable["SetDynamics",number]!=10 ? "D"+round(CtlTable["SetDynamics",number]/12.5,0):toString() : "Set"))
EGPR:egpSetText(103,"Trail:  "+(!CtlTable["SetDynamics",number] ? CtlTable["SetThrottle",number]!=0 ? "N"+CtlTable["SetThrottle",number]/12.5 : "Idle" : 
CtlTable["SetDynamics",number]!=10 ? "D"+round(CtlTable["SetDynamics",number]/12.5,0):toString() : "Set"))

#Distance
EGPR:egpSetText(98,floor(Dist):toString())





#Buttons & Pages (yay)

#[Preset Vectors for Buttons
TopRowHeight=442
BottomRowHeight=477

Button1Horizontal=0
Button2Horizontal=64
Button3Horizontal=128
Button4Horizontal=192
Button5Horizontal=256
Button6Horizontal=320
Button7Horizontal=384
Button8Horizontal=448
]#
runOnChat(1)
if(chatClk(owner())&(owner():lastSaid():sub(0,2)==".l"|owner():lastSaid():sub(0,2)==".r")){
    (EGPL:entity()):soundPlay(1,0,"monkssounds/buttons/button5.wav")
    (EGPR:entity()):soundPlay(2,0,"monkssounds/buttons/button5.wav")
    hideChat(1)
    LastSaid=owner():lastSaid()
}
else{
    LastSaid=""
}
if((changed(LPage)|changed(LPageVar))&LTopVisible){
    EGPL:egpClear()
    EGPL:egpTopUpdate()
}
if((changed(RPage)|changed(RPageVar))&RTopVisible){
    EGPR:egpClear()
    EGPR:egpTopUpdate()
}
if(DistMode>2){
    DistMode=0
}
if(DistMode==0){
    Distance=0
}
elseif(DistMode==1){
    Distance+=((RLCPTW["MPH",number]*5280)/36000)
}
elseif(DistMode==2){
    Distance+=0
}
Dist=(CountDown ? clamp(DistCountDown-Distance,0,99999) : clamp(Distance,0,99999))

if(changed(LPage)|changed(LPageVar)|changed(RPage)|changed(RPageVar)|changed(DistMode)){
    timer("buttonclk",50)
}
####################################################################################################################################################                Left Display
switch(LPage){
    case 0,####################################################################################################################################################     Main Page
        switch(LPageVar){
            case 0,
                LTopVisible=1
                if(clk("buttonclk")){
                    stoptimer("buttonclk")
                    EGPL:egpButton(104+3*0,"Air\nBrake",vec2(0,442),vec2(64,35),vec(255,245,235))
                    switch(DistMode){
                        case 0,
                        EGPL:egpButton(104+3*1,"Distance\nStart",vec2(0,477),vec2(64,35),vec(235,245,255))
                        break
                        case 1,
                        EGPL:egpButton(104+3*1,"Distance\nStop",vec2(0,477),vec2(64,35),vec(235,245,255))
                        break
                        case 2,
                        EGPL:egpButton(104+3*1,"Distance\nReset",vec2(0,477),vec2(64,35),vec(235,245,255))
                        break
                    }
                    EGPL:egpButton(104+3*2,"Distance\nSetup",vec2(64,477),vec2(64,35),vec(235,245,255))
                    EGPL:egpButton(104+3*3,"More\nMenu",vec2(448,477),vec2(64,35),vec(235,245,255))
                    
                    
                    EGPL:egpBoxLabeled(200,vec2(10,200),vec2(100,30),"Rail Cleaner",vec(255))
                    EGPL:egpBoxLabeled(203,vec2(10,255),vec2(100,80),"EOT",vec(255))
                    EGPL:egpBoxLabeled(206,vec2(10,356),vec2(50,34),"Ind Brk",vec(255))
                    EGPL:egpBoxLabeled(209,vec2(10+50,356),vec2(50,34),"Auto Brk",vec(255))
                    EGPL:egpBoxLabeled(212,vec2(402,356),vec2(100,34),"Fuel",vec(255))
 
                    EGPL:egpText(215,"0 Gal",vec2(462,370))
                    EGPL:egpFont(215,"Arial")
                    EGPL:egpSize(215,10)
                    
                    EGPL:egpBox(216,vec2(432,380),vec2(30,2))

                    EGPL:egpBox(217,vec2(432,375),vec2(30,10))
                    EGPL:egpColor(217,vec(60,80,190))
                    
                    EGPL:egpBox(218,vec2(432-16.5,375),vec2(4,10))
                    EGPL:egpColor(218,vec(0))
                    
                    EGPL:egpBox(219,vec2(432+16.5,375),vec2(4,10))
                    EGPL:egpColor(219,vec(0))
                    
                    EGPL:egpText(220,"E",vec2(406,370))
                    EGPL:egpFont(220,"Arial")
                    EGPL:egpSize(220,10)
                    
                    EGPL:egpText(221,"F",vec2(451,370))
                    EGPL:egpFont(221,"Arial")
                    EGPL:egpSize(221,10)
                    
                    EGPL:egpTextLayout(222,"Off",vec2(10,200),vec2(100,30))
                    EGPL:egpFont(222,"Arial")
                    EGPL:egpSize(222,12)
                    EGPL:egpAlign(222,1,1)
                    
                    EGPL:egpTextLayout(223,"ID Code: 00000",vec2(10,262),vec2(100,30))
                    EGPL:egpFont(223,"Arial")
                    EGPL:egpSize(223,12)
                    EGPL:egpAlign(223,1,1)
                    
                    EGPL:egpTextLayout(224,"Marker: Off",vec2(10,262+19),vec2(100,30))
                    EGPL:egpFont(224,"Arial")
                    EGPL:egpSize(224,12)
                    EGPL:egpAlign(224,1,1)
                    
                    EGPL:egpTextLayout(225,"EM: Disabled",vec2(10,262+38),vec2(100,30))
                    EGPL:egpFont(225,"Arial")
                    EGPL:egpSize(225,12)
                    EGPL:egpAlign(225,1,1)
                    
                    EGPL:egpTextLayout(226,"Lead",vec2(10,356),vec2(50,34))
                    EGPL:egpFont(226,"Arial")
                    EGPL:egpSize(226,12)
                    EGPL:egpAlign(226,1,1)
                    
                    EGPL:egpTextLayout(227,"Cut-In",vec2(10+50,356),vec2(50,34))
                    EGPL:egpFont(227,"Arial")
                    EGPL:egpSize(227,12)
                    EGPL:egpAlign(227,1,1)
                    
                    EGPL:egpSetText(194,"0000-0")
                    EGPL:egpSetText(195,"Ready")
                }
                if(changed(LastSaid)&LastSaid==".lb8"){
                    LPageVar=1
                }
                if(changed(LastSaid)&LastSaid==".lb1"){
                    DistMode++
                }
                if(DistMode>2){
                    DistMode=0
                }
                if(changed(LastSaid)&LastSaid==".lfb1"){
                    LPage=1
                    LPageVar=0
                }
                if(changed(LastSaid)&LastSaid==".lb2"){
                    LPage=2
                    LPageVar=0
                }
                EGPL:egpSetText(215,ceil(FuelLevel):toString()+" Gal")
                
                EGPL:egpPos(217,vec2(417+(FuelLevel/320)/(FuelCap/5000),375))
                EGPL:egpSize(217,vec2((FuelLevel/160)/(FuelCap/5000),10))
                
                EGPL:egpSetText(226,IsolatedBraking ? "Lead" : "Trail")
                EGPL:egpSetText(227,BrakeCutIn ? "Cut-In" : "Cut-Out")
            break
            case 1,
                LTopVisible=1
                if(clk("buttonclk")){
                    stoptimer("buttonclk")
                    EGPL:egpButton(104+3*0,"Exit",vec2(448,442),vec2(64,35),vec(255,245,235))
                    EGPL:egpSetText(194,"0000-1")
                    EGPL:egpSetText(195,"Ready")
                }
                if(LastSaid==".lfb8"){
                    LPageVar=0
                }
            break
        }
    break
    case 1,####################################################################################################################################################     Airbrake Setup
        switch (LPageVar){
            case 0,
                LTopVisible=1
                if(clk("buttonclk")){
                    stoptimer("buttonclk")
                    EGPL:egpButton(104+3*0,"Change Setup",vec2(128,442),vec2(64,35),vec(255,245,235))
                    EGPL:egpButton(104+3*1,"Exit",vec2(448,442),vec2(64,35),vec(255,245,235))
                    EGPL:egpBoxOutline(200,vec2(256,200),vec2(490,32))
                    EGPL:egpTextLayout(201,"Electronic Air Brake Setup",vec2(11,184),vec2(490,32))
                    EGPL:egpAlign(201,1,1)
                    EGPL:egpSize(201,20)
                    EGPL:egpFont(201,"Arial")
                    EGPL:egpBoxLabeled(202,vec2(25,230),vec2(120,50),"Feed Valve Setting",vec(255))
                    EGPL:egpBoxLabeled(205,vec2(25+130,230),vec2(120,50),"Automatic Brake",vec(255))
                    EGPL:egpBoxLabeled(208,vec2(25+260,230),vec2(120,50),"Independent Brake",vec(255))
                    EGPL:egpTextLayout(211,"Current\nSetup",vec2(408,230),vec2(100,50))
                    EGPL:egpAlign(211,1,1)
                    EGPL:egpSize(211,20)
                    EGPL:egpFont(211,"Arial")
                    EGPL:egpSetText(194,"2000-0")
                    EGPL:egpSetText(195,"Ready")
                }
                if(changed(LastSaid)&LastSaid==".lfb3"){
                    LPage=1
                    LPageVar=1
                }
                if(changed(LastSaid)&LastSaid==".lfb8"){
                    LPage=0
                    LPageVar=0
                }
                if(chatClk(owner())|clk("buttonclk")){
                    EGPL:egpTextLayout(212,floor(FeedPressure):toString(),vec2(25,230),vec2(120,50))
                    EGPL:egpAlign(212,1,1)
                    EGPL:egpSize(212,20)
                    EGPL:egpFont(212,"Arial")

                    EGPL:egpTextLayout(213,(BrakeCutIn ? "Cut In" : "Cut Out"),vec2(25+130,230),vec2(120,50))
                    EGPL:egpAlign(213,1,1)
                    EGPL:egpSize(213,20)
                    EGPL:egpFont(213,"Arial")
                
                    EGPL:egpTextLayout(214,(IsolatedBraking ? "Lead" : "Trail"),vec2(25+260,230),vec2(120,50))
                    EGPL:egpAlign(214,1,1)
                    EGPL:egpSize(214,20)
                    EGPL:egpFont(214,"Arial")
                }
            break
            case 1,
                LTopVisible=1
                if(clk("buttonclk")){
                    stoptimer("buttonclk")
                    EGPL:egpButton(104+3*0,"Increase",vec2(0,442),vec2(64,35),vec(255,245,235))
                    EGPL:egpButton(104+3*1,"Decrease",vec2(64,442),vec2(64,35),vec(255,245,235))
                    EGPL:egpButton(104+3*2,"Cut In/Out",vec2(128,442),vec2(64,35),vec(255,245,235))
                    EGPL:egpButton(104+3*3,"Lead/Trail",vec2(192,442),vec2(64,35),vec(255,245,235))
                    EGPL:egpButton(104+3*4,"Save Changes",vec2(320,442),vec2(64,35),vec(255,245,235))
                    EGPL:egpButton(104+3*5,"Exit",vec2(448,442),vec2(64,35),vec(255,245,235))
                    
                    EGPL:egpBoxOutline(200,vec2(256,200),vec2(490,32))
                    EGPL:egpTextLayout(201,"Electronic Air Brake Setup",vec2(11,184),vec2(490,32))
                    EGPL:egpAlign(201,1,1)
                    EGPL:egpSize(201,20)
                    EGPL:egpFont(201,"Arial")
                    EGPL:egpBoxLabeled(202,vec2(25,230),vec2(120,50),"Feed Valve Setting",vec(255))
                    EGPL:egpBoxLabeled(205,vec2(25+130,230),vec2(120,50),"Automatic Brake",vec(255))
                    EGPL:egpBoxLabeled(208,vec2(25+260,230),vec2(120,50),"Independent Brake",vec(255))
                    EGPL:egpTextLayout(211,"Current\nSetup",vec2(408,230),vec2(100,50))
                    EGPL:egpAlign(211,1,1)
                    EGPL:egpSize(211,20)
                    EGPL:egpFont(211,"Arial")
                    
                    EGPL:egpBoxLabeled(215,vec2(25,290),vec2(120,50),"Feed Valve Setting",vec(255))
                    EGPL:egpBoxLabeled(218,vec2(25+130,290),vec2(120,50),"Automatic Brake",vec(255))
                    EGPL:egpBoxLabeled(221,vec2(25+260,290),vec2(120,50),"Independent Brake",vec(255))
                    
                    EGPL:egpTextLayout(227,"New\nSetup",vec2(408,290),vec2(100,50))
                    EGPL:egpAlign(227,1,1)
                    EGPL:egpSize(227,20)
                    EGPL:egpFont(227,"Arial")
                    
                    EGPL:egpSetText(194,"2000-1")
                    EGPL:egpSetText(195,"Ready")
                }
                if(LastSaid==".lfb8"){
                    LPage=0
                    LPageVar=0
                }
                if(LastSaid==".lfb1"&NewFeedPressure<110){
                    NewFeedPressure+=5
                }
                if(LastSaid==".lfb2"&NewFeedPressure>80){
                    NewFeedPressure-=5
                }
                if(LastSaid==".lfb3"){
                    NewBrakeCutIn=!NewBrakeCutIn
                }
                if(LastSaid==".lfb4"){
                    NewIsolatedBraking=!NewIsolatedBraking
                }
                if(LastSaid==".lfb6"){
                    FeedPressure=NewFeedPressure
                    BrakeCutIn=NewBrakeCutIn
                    IsolatedBraking=NewIsolatedBraking
                }
                if(chatClk(owner())|clk("buttonclk")){
                    EGPL:egpTextLayout(212,floor(FeedPressure):toString(),vec2(25,230),vec2(120,50))
                    EGPL:egpAlign(212,1,1)
                    EGPL:egpSize(212,20)
                    EGPL:egpFont(212,"Arial")

                    EGPL:egpTextLayout(213,(BrakeCutIn ? "Cut In" : "Cut Out"),vec2(25+130,230),vec2(120,50))
                    EGPL:egpAlign(213,1,1)
                    EGPL:egpSize(213,20)
                    EGPL:egpFont(213,"Arial")
                
                    EGPL:egpTextLayout(214,(IsolatedBraking ? "Lead" : "Trail"),vec2(25+260,230),vec2(120,50))
                    EGPL:egpAlign(214,1,1)
                    EGPL:egpSize(214,20)
                    EGPL:egpFont(214,"Arial")
                    
                    EGPL:egpTextLayout(224,floor(NewFeedPressure):toString(),vec2(25,290),vec2(120,50))
                    EGPL:egpAlign(224,1,1)
                    EGPL:egpSize(224,20)
                    EGPL:egpFont(224,"Arial")

                    EGPL:egpTextLayout(225,(NewBrakeCutIn ? "Cut In" : "Cut Out"),vec2(25+130,290),vec2(120,50))
                    EGPL:egpAlign(225,1,1)
                    EGPL:egpSize(225,20)
                    EGPL:egpFont(225,"Arial")
                
                    EGPL:egpTextLayout(226,(NewIsolatedBraking ? "Lead" : "Trail"),vec2(25+260,290),vec2(120,50))
                    EGPL:egpAlign(226,1,1)
                    EGPL:egpSize(226,20)
                    EGPL:egpFont(226,"Arial")
                }
            break
        }
    break
    case 2,####################################################################################################################################################     Distance Setup
        switch(LPageVar){
            case 0,
                if(clk("buttonclk")){
                    LTopVisible=1
                    stoptimer("buttonclk")
                    EGPL:egpButton(104+3*0,"Modify\nPreset",vec2(192,442),vec2(64,35),vec(255,245,235))
                    switch(DistMode){
                        case 0,
                        EGPL:egpButton(104+3*1,"Distance\nStart",vec2(256,442),vec2(64,35),vec(255,245,235))
                        break
                        case 1,
                        EGPL:egpButton(104+3*1,"Distance\nStop",vec2(256,442),vec2(64,35),vec(255,245,235))
                        break
                        case 2,
                        EGPL:egpButton(104+3*1,"Distance\nReset",vec2(256,442),vec2(64,35),vec(255,245,235))
                        break
                    }
                    EGPL:egpButton(104+3*3,"Exit",vec2(448,442),vec2(64,35),vec(255,245,235))
                    EGPL:egpBoxOutline(200,vec2(256,200),vec2(490,32))
                    EGPL:egpTextLayout(201,"Distance Counter Setup",vec2(11,184),vec2(490,32))
                    EGPL:egpAlign(201,1,1)
                    EGPL:egpSize(201,20)
                    EGPL:egpFont(201,"Arial")
                    
                    EGPL:egpBoxLabeled(202,vec2(45,260),vec2(180,80),"Distance Counter Preset (feet)",vec(255))
                    EGPL:egpBoxLabeled(205,vec2(320,260),vec2(140,80),"Distance Counter Mode",vec(255))
                    
                    EGPL:egpBox(208,vec2(390,286),vec2(128,16))
                    EGPL:egpColor(208,vec(60,80,190))
                    
                    EGPL:egpText(209,"Count Up From Zero",vec2(330,280))
                    EGPL:egpSize(209,12)
                    EGPL:egpFont(209,"Arial")
                    
                    EGPL:egpText(210,"Count Down From Preset",vec2(330,310))
                    EGPL:egpSize(210,12)
                    EGPL:egpFont(210,"Arial")
                    
                    EGPL:egpTextLayout(211,"00000",vec2(45,260),vec2(180,80))
                    EGPL:egpAlign(211,1,1)
                    EGPL:egpSize(211,42)
                    EGPL:egpFont(211,"Arial")
                    
                    EGPL:egpSetText(194,"1200-0")
                    EGPL:egpSetText(195,"Ready")
                }
                if(chatClk(owner())|clk("buttonclk")){
                    if(LastSaid==".lfb4"){
                        LPage=2
                        LPageVar=1
                    }
                    if(LastSaid==".lfb5"){
                        DistMode++
                    }
                    if(LastSaid==".lfb6"){
                        CountDown=!CountDown
                    }
                    if(LastSaid==".lfb8"){
                        LPage=0
                        LPageVar=0
                    }
                    EGPL:egpSetText(211,DistCountDown:toString())
                    switch(CountDown){
                        case 0,
                        EGPL:egpPos(208,vec2(390,286))
                        EGPL:egpButton(104+3*2,"Count\nDown",vec2(320,442),vec2(64,35),vec(255,245,235))
                        break
                        case 1,
                        EGPL:egpPos(208,vec2(390,316))
                        EGPL:egpButton(104+3*2,"Count\nUp",vec2(320,442),vec2(64,35),vec(255,245,235))
                        break
                    }
                }
            break
            case 1,
                timer("ready",500)
                if(clk("ready")){
                    stoptimer("ready")
                    DistReady=1
                }
                if(clk("buttonclk")){
                    DistDigits=table()
                    LTopVisible=1
                    stoptimer("buttonclk")
                    EGPL:egpButton(104+3*0,"Back\nSpace",vec2(192,442),vec2(64,35),vec(255,245,235))
                    EGPL:egpButton(104+3*2,"Save\nPreset",vec2(384,442),vec2(64,35),vec(255,245,235))
                    EGPL:egpButton(104+3*3,"Cancel",vec2(448,442),vec2(64,35),vec(255,245,235))
                    EGPL:egpBoxOutline(200,vec2(256,200),vec2(490,32))
                    EGPL:egpTextLayout(201,"Distance Counter Setup",vec2(11,184),vec2(490,32))
                    EGPL:egpAlign(201,1,1)
                    EGPL:egpSize(201,20)
                    EGPL:egpFont(201,"Arial")
                    
                    EGPL:egpBoxLabeled(202,vec2(45,260),vec2(180,80),"Distance Counter Preset (feet)",vec(255))
                    EGPL:egpBoxLabeled(205,vec2(320,260),vec2(140,80),"Distance Counter Mode",vec(255))
                    
                    EGPL:egpBox(208,vec2(390,286),vec2(128,16))
                    EGPL:egpColor(208,vec(60,80,190))
                    
                    EGPL:egpText(209,"Count Up From Zero",vec2(330,280))
                    EGPL:egpSize(209,12)
                    EGPL:egpFont(209,"Arial")
                    
                    EGPL:egpText(210,"Count Down From Preset",vec2(330,310))
                    EGPL:egpSize(210,12)
                    EGPL:egpFont(210,"Arial")
                    
                    EGPL:egpBox(211,vec2(96,300),vec2(20,45))
                    EGPL:egpColor(211,vec(36))
                    
                    EGPL:egpTextLayout(212,"00000",vec2(45,260),vec2(180,80))
                    EGPL:egpAlign(212,1,1)
                    EGPL:egpSize(212,42)
                    EGPL:egpFont(212,"Arial")
                    
                    EGPL:egpSetText(194,"1200-1")
                    EGPL:egpSetText(195,"Use Number Keys To Enter New Preset Value, Back Space To Modify\nExisting Value.")
                }
                if(chatClk(owner())|clk("buttonclk")){
                    if(LastSaid==".lfb4"){
                        timer("ready",100)
                        DistReady=0
                        DistDigits:removeNumber(DistDigits:count())
                    }
                    if(LastSaid==".lfb7"){
                        DistCountDown=(DistDigits[1,number]:toString()+DistDigits[2,number]:toString()+DistDigits[3,number]:toString()+DistDigits[4,number]:toString()+DistDigits[5,number]:toString()):toNumber()
                        LPage=2
                        LPageVar=0
                    }
                    if(LastSaid==".lfb8"){
                        LPage=2
                        LPageVar=0
                        DistReady=0
                    }
                    if(DistDigits:count()<=4&DistReady){
                        InputDigit=LastSaid:sub(4,5)
                        DistDigits:pushNumber(InputDigit:toNumber())
                    }
                    EGPL:egpSetText(212,DistDigits[1,number]:toString()+DistDigits[2,number]:toString()+DistDigits[3,number]:toString()+DistDigits[4,number]:toString()+DistDigits[5,number]:toString())
                    EGPL:egpPos(211,vec2(96+(DistDigits:count()*19),300))
                    EGPL:egpColor(211,vec(36)*((DistDigits:count())<5))
                }
            break
        }
    break
}

####################################################################################################################################################                Right Display
switch(RPage){
    case 0,####################################################################################################################################################     Main Page
        switch(RPageVar){
            case 0,
                RTopVisible=1
                if(clk("buttonclk")){
                    stoptimer("buttonclk")
                    EGPR:egpButton(104+3*0,"Air\nBrake",vec2(0,442),vec2(64,35),vec(255,245,235))
                    switch(DistMode){
                        case 0,
                        EGPR:egpButton(104+3*1,"Distance\nStart",vec2(0,477),vec2(64,35),vec(235,245,255))
                        break
                        case 1,
                        EGPR:egpButton(104+3*1,"Distance\nStop",vec2(0,477),vec2(64,35),vec(235,245,255))
                        break
                        case 2,
                        EGPR:egpButton(104+3*1,"Distance\nReset",vec2(0,477),vec2(64,35),vec(235,245,255))
                        break
                    }
                    EGPR:egpButton(104+3*2,"Distance\nSetup",vec2(64,477),vec2(64,35),vec(235,245,255))
                    EGPR:egpButton(104+3*3,"More\nMenu",vec2(448,477),vec2(64,35),vec(235,245,255))
                    
                    
                    EGPR:egpBoxLabeled(200,vec2(10,200),vec2(100,30),"Rail Cleaner",vec(255))
                    EGPR:egpBoxLabeled(203,vec2(10,255),vec2(100,80),"EOT",vec(255))
                    EGPR:egpBoxLabeled(206,vec2(10,356),vec2(50,34),"Ind Brk",vec(255))
                    EGPR:egpBoxLabeled(209,vec2(10+50,356),vec2(50,34),"Auto Brk",vec(255))
                    EGPR:egpBoxLabeled(212,vec2(402,356),vec2(100,34),"Fuel",vec(255))
                    
                    EGPR:egpText(215,"0 Gal",vec2(462,370))
                    EGPR:egpFont(215,"Arial")
                    EGPR:egpSize(215,10)
                    
                    EGPR:egpBox(216,vec2(432,380),vec2(30,2))

                    EGPR:egpBox(217,vec2(432,375),vec2(30,10))
                    EGPR:egpColor(217,vec(60,80,190))
                    
                    EGPR:egpBox(218,vec2(432-16.5,375),vec2(4,10))
                    EGPR:egpColor(218,vec(0))
                    
                    EGPR:egpBox(219,vec2(432+16.5,375),vec2(4,10))
                    EGPR:egpColor(219,vec(0))
                    
                    EGPR:egpText(220,"E",vec2(406,370))
                    EGPR:egpFont(220,"Arial")
                    EGPR:egpSize(220,10)
                    
                    EGPR:egpText(221,"F",vec2(451,370))
                    EGPR:egpFont(221,"Arial")
                    EGPR:egpSize(221,10)
                    
                    EGPR:egpTextLayout(222,"Off",vec2(10,200),vec2(100,30))
                    EGPR:egpFont(222,"Arial")
                    EGPR:egpSize(222,12)
                    EGPR:egpAlign(222,1,1)
                    
                    EGPR:egpTextLayout(223,"ID Code: 00000",vec2(10,262),vec2(100,30))
                    EGPR:egpFont(223,"Arial")
                    EGPR:egpSize(223,12)
                    EGPR:egpAlign(223,1,1)
                    
                    EGPR:egpTextLayout(224,"Marker: Off",vec2(10,262+19),vec2(100,30))
                    EGPR:egpFont(224,"Arial")
                    EGPR:egpSize(224,12)
                    EGPR:egpAlign(224,1,1)
                    
                    EGPR:egpTextLayout(225,"EM: Disabled",vec2(10,262+38),vec2(100,30))
                    EGPR:egpFont(225,"Arial")
                    EGPR:egpSize(225,12)
                    EGPR:egpAlign(225,1,1)
                    
                    EGPR:egpTextLayout(226,"Lead",vec2(10,356),vec2(50,34))
                    EGPR:egpFont(226,"Arial")
                    EGPR:egpSize(226,12)
                    EGPR:egpAlign(226,1,1)
                    
                    EGPR:egpTextLayout(227,"Cut-In",vec2(10+50,356),vec2(50,34))
                    EGPR:egpFont(227,"Arial")
                    EGPR:egpSize(227,12)
                    EGPR:egpAlign(227,1,1)
                    
                    EGPR:egpSetText(194,"0000-0")
                    EGPR:egpSetText(195,"Ready")
                }
                if(changed(LastSaid)&LastSaid==".rb8"){
                    RPageVar=1
                }
                if(changed(LastSaid)&LastSaid==".rb1"){
                    DistMode++
                }
                if(DistMode>2){
                    DistMode=0
                }
                if(changed(LastSaid)&LastSaid==".rfb1"){
                    RPage=1
                    RPageVar=0
                }
                if(changed(LastSaid)&LastSaid==".rb2"){
                    RPage=2
                    RPageVar=0
                }
                EGPR:egpSetText(215,ceil(FuelLevel):toString()+" Gal")
                
                EGPR:egpPos(217,vec2(417+(FuelLevel/320)/(FuelCap/5000),375))
                EGPR:egpSize(217,vec2((FuelLevel/160)/(FuelCap/5000),10))
                
                EGPR:egpSetText(226,IsolatedBraking ? "Lead" : "Trail")
                EGPR:egpSetText(227,BrakeCutIn ? "Cut-In" : "Cut-Out")
            break
            case 1,
                RTopVisible=1
                if(clk("buttonclk")){
                    stoptimer("buttonclk")
                    EGPR:egpButton(104+3*0,"Exit",vec2(448,442),vec2(64,35),vec(255,245,235))
                    EGPR:egpSetText(194,"0000-1")
                    EGPR:egpSetText(195,"Ready")
                }
                if(LastSaid==".rfb8"){
                    LPageVar=0
                }
            break
        }
    break
    case 1,####################################################################################################################################################     Airbrake Setup
        switch (RPageVar){
            case 0,
                RTopVisible=1
                if(clk("buttonclk")){
                    stoptimer("buttonclk")
                    EGPR:egpButton(104+3*0,"Change Setup",vec2(128,442),vec2(64,35),vec(255,245,235))
                    EGPR:egpButton(104+3*1,"Exit",vec2(448,442),vec2(64,35),vec(255,245,235))
                    EGPR:egpBoxOutline(200,vec2(256,200),vec2(490,32))
                    EGPR:egpTextLayout(201,"Electronic Air Brake Setup",vec2(11,184),vec2(490,32))
                    EGPR:egpAlign(201,1,1)
                    EGPR:egpSize(201,20)
                    EGPR:egpFont(201,"Arial")
                    EGPR:egpBoxLabeled(202,vec2(25,230),vec2(120,50),"Feed Valve Setting",vec(255))
                    EGPR:egpBoxLabeled(205,vec2(25+130,230),vec2(120,50),"Automatic Brake",vec(255))
                    EGPR:egpBoxLabeled(208,vec2(25+260,230),vec2(120,50),"Independent Brake",vec(255))
                    EGPR:egpTextLayout(211,"Current\nSetup",vec2(408,230),vec2(100,50))
                    EGPR:egpAlign(211,1,1)
                    EGPR:egpSize(211,20)
                    EGPR:egpFont(211,"Arial")
                    EGPR:egpSetText(194,"2000-0")
                    EGPR:egpSetText(195,"Ready")
                }
                if(changed(LastSaid)&LastSaid==".rfb3"){
                    RPage=1
                    RPageVar=1
                }
                if(changed(LastSaid)&LastSaid==".rfb8"){
                    RPage=0
                    RPageVar=0
                }
                if(chatClk(owner())|clk("buttonclk")){
                    EGPR:egpTextLayout(212,floor(FeedPressure):toString(),vec2(25,230),vec2(120,50))
                    EGPR:egpAlign(212,1,1)
                    EGPR:egpSize(212,20)
                    EGPR:egpFont(212,"Arial")

                    EGPR:egpTextLayout(213,(BrakeCutIn ? "Cut In" : "Cut Out"),vec2(25+130,230),vec2(120,50))
                    EGPR:egpAlign(213,1,1)
                    EGPR:egpSize(213,20)
                    EGPR:egpFont(213,"Arial")
                
                    EGPR:egpTextLayout(214,(IsolatedBraking ? "Lead" : "Trail"),vec2(25+260,230),vec2(120,50))
                    EGPR:egpAlign(214,1,1)
                    EGPR:egpSize(214,20)
                    EGPR:egpFont(214,"Arial")
                }
            break
            case 1,
                RTopVisible=1
                if(clk("buttonclk")){
                    stoptimer("buttonclk")
                    EGPR:egpButton(104+3*0,"Increase",vec2(0,442),vec2(64,35),vec(255,245,235))
                    EGPR:egpButton(104+3*1,"Decrease",vec2(64,442),vec2(64,35),vec(255,245,235))
                    EGPR:egpButton(104+3*2,"Cut In/Out",vec2(128,442),vec2(64,35),vec(255,245,235))
                    EGPR:egpButton(104+3*3,"Lead/Trail",vec2(192,442),vec2(64,35),vec(255,245,235))
                    EGPR:egpButton(104+3*4,"Save Changes",vec2(320,442),vec2(64,35),vec(255,245,235))
                    EGPR:egpButton(104+3*5,"Exit",vec2(448,442),vec2(64,35),vec(255,245,235))
                    
                    EGPR:egpBoxOutline(200,vec2(256,200),vec2(490,32))
                    EGPR:egpTextLayout(201,"Electronic Air Brake Setup",vec2(11,184),vec2(490,32))
                    EGPR:egpAlign(201,1,1)
                    EGPR:egpSize(201,20)
                    EGPR:egpFont(201,"Arial")
                    EGPR:egpBoxLabeled(202,vec2(25,230),vec2(120,50),"Feed Valve Setting",vec(255))
                    EGPR:egpBoxLabeled(205,vec2(25+130,230),vec2(120,50),"Automatic Brake",vec(255))
                    EGPR:egpBoxLabeled(208,vec2(25+260,230),vec2(120,50),"Independent Brake",vec(255))
                    EGPR:egpTextLayout(211,"Current\nSetup",vec2(408,230),vec2(100,50))
                    EGPR:egpAlign(211,1,1)
                    EGPR:egpSize(211,20)
                    EGPR:egpFont(211,"Arial")
                    
                    EGPR:egpBoxLabeled(215,vec2(25,290),vec2(120,50),"Feed Valve Setting",vec(255))
                    EGPR:egpBoxLabeled(218,vec2(25+130,290),vec2(120,50),"Automatic Brake",vec(255))
                    EGPR:egpBoxLabeled(221,vec2(25+260,290),vec2(120,50),"Independent Brake",vec(255))
                    
                    EGPR:egpTextLayout(227,"New\nSetup",vec2(408,290),vec2(100,50))
                    EGPR:egpAlign(227,1,1)
                    EGPR:egpSize(227,20)
                    EGPR:egpFont(227,"Arial")
                    
                    EGPR:egpSetText(194,"2000-1")
                    EGPR:egpSetText(195,"Ready")
                }
                if(LastSaid==".rfb8"){
                    RPage=0
                    RPageVar=0
                }
                if(LastSaid==".rfb1"&NewFeedPressure<110){
                    NewFeedPressure+=5
                }
                if(LastSaid==".rfb2"&NewFeedPressure>80){
                    NewFeedPressure-=5
                }
                if(LastSaid==".rfb3"){
                    NewBrakeCutIn=!NewBrakeCutIn
                }
                if(LastSaid==".rfb4"){
                    NewIsolatedBraking=!NewIsolatedBraking
                }
                if(LastSaid==".rfb6"){
                    FeedPressure=NewFeedPressure
                    BrakeCutIn=NewBrakeCutIn
                    IsolatedBraking=NewIsolatedBraking
                }
                if(chatClk(owner())|clk("buttonclk")){
                    EGPR:egpTextLayout(212,floor(FeedPressure):toString(),vec2(25,230),vec2(120,50))
                    EGPR:egpAlign(212,1,1)
                    EGPR:egpSize(212,20)
                    EGPR:egpFont(212,"Arial")

                    EGPR:egpTextLayout(213,(BrakeCutIn ? "Cut In" : "Cut Out"),vec2(25+130,230),vec2(120,50))
                    EGPR:egpAlign(213,1,1)
                    EGPR:egpSize(213,20)
                    EGPR:egpFont(213,"Arial")
                
                    EGPR:egpTextLayout(214,(IsolatedBraking ? "Lead" : "Trail"),vec2(25+260,230),vec2(120,50))
                    EGPR:egpAlign(214,1,1)
                    EGPR:egpSize(214,20)
                    EGPR:egpFont(214,"Arial")
                    
                    EGPR:egpTextLayout(224,floor(NewFeedPressure):toString(),vec2(25,290),vec2(120,50))
                    EGPR:egpAlign(224,1,1)
                    EGPR:egpSize(224,20)
                    EGPR:egpFont(224,"Arial")

                    EGPR:egpTextLayout(225,(NewBrakeCutIn ? "Cut In" : "Cut Out"),vec2(25+130,290),vec2(120,50))
                    EGPR:egpAlign(225,1,1)
                    EGPR:egpSize(225,20)
                    EGPR:egpFont(225,"Arial")
                
                    EGPR:egpTextLayout(226,(NewIsolatedBraking ? "Lead" : "Trail"),vec2(25+260,290),vec2(120,50))
                    EGPR:egpAlign(226,1,1)
                    EGPR:egpSize(226,20)
                    EGPR:egpFont(226,"Arial")
                }
            break
        }
    break
    case 2,####################################################################################################################################################     Distance Setup
        switch(RPageVar){
            case 0,
                if(clk("buttonclk")){
                    RTopVisible=1
                    stoptimer("buttonclk")
                    EGPR:egpButton(104+3*0,"Modify\nPreset",vec2(192,442),vec2(64,35),vec(255,245,235))
                    switch(DistMode){
                        case 0,
                        EGPR:egpButton(104+3*1,"Distance\nStart",vec2(256,442),vec2(64,35),vec(255,245,235))
                        break
                        case 1,
                        EGPR:egpButton(104+3*1,"Distance\nStop",vec2(256,442),vec2(64,35),vec(255,245,235))
                        break
                        case 2,
                        EGPR:egpButton(104+3*1,"Distance\nReset",vec2(256,442),vec2(64,35),vec(255,245,235))
                        break
                    }
                    EGPR:egpButton(104+3*3,"Exit",vec2(448,442),vec2(64,35),vec(255,245,235))
                    EGPR:egpBoxOutline(200,vec2(256,200),vec2(490,32))
                    EGPR:egpTextLayout(201,"Distance Counter Setup",vec2(11,184),vec2(490,32))
                    EGPR:egpAlign(201,1,1)
                    EGPR:egpSize(201,20)
                    EGPR:egpFont(201,"Arial")
                    
                    EGPR:egpBoxLabeled(202,vec2(45,260),vec2(180,80),"Distance Counter Preset (feet)",vec(255))
                    EGPR:egpBoxLabeled(205,vec2(320,260),vec2(140,80),"Distance Counter Mode",vec(255))
                    
                    EGPR:egpBox(208,vec2(390,286),vec2(128,16))
                    EGPR:egpColor(208,vec(60,80,190))
                    
                    EGPR:egpText(209,"Count Up From Zero",vec2(330,280))
                    EGPR:egpSize(209,12)
                    EGPR:egpFont(209,"Arial")
                    
                    EGPR:egpText(210,"Count Down From Preset",vec2(330,310))
                    EGPR:egpSize(210,12)
                    EGPR:egpFont(210,"Arial")
                    
                    EGPR:egpTextLayout(211,"00000",vec2(45,260),vec2(180,80))
                    EGPR:egpAlign(211,1,1)
                    EGPR:egpSize(211,42)
                    EGPR:egpFont(211,"Arial")
                    
                    EGPR:egpSetText(194,"1200-0")
                    EGPR:egpSetText(195,"Ready")
                }
                if(chatClk(owner())|clk("buttonclk")){
                    if(LastSaid==".rfb4"){
                        RPage=2
                        RPageVar=1
                    }
                    if(LastSaid==".rfb5"){
                        DistMode++
                    }
                    if(LastSaid==".rfb6"){
                        CountDown=!CountDown
                    }
                    if(LastSaid==".rfb8"){
                        RPage=0
                        RPageVar=0
                    }
                    EGPR:egpSetText(211,DistCountDown:toString())
                    switch(CountDown){
                        case 0,
                        EGPR:egpPos(208,vec2(390,286))
                        EGPR:egpButton(104+3*2,"Count\nDown",vec2(320,442),vec2(64,35),vec(255,245,235))
                        break
                        case 1,
                        EGPR:egpPos(208,vec2(390,316))
                        EGPR:egpButton(104+3*2,"Count\nUp",vec2(320,442),vec2(64,35),vec(255,245,235))
                        break
                    }
                }
            break
            case 1,
                timer("ready",500)
                if(clk("ready")){
                    stoptimer("ready")
                    DistReady=1
                }
                if(clk("buttonclk")){
                    DistDigits=table()
                    RTopVisible=1
                    stoptimer("buttonclk")
                    EGPR:egpButton(104+3*0,"Back\nSpace",vec2(192,442),vec2(64,35),vec(255,245,235))
                    EGPR:egpButton(104+3*2,"Save\nPreset",vec2(384,442),vec2(64,35),vec(255,245,235))
                    EGPR:egpButton(104+3*3,"Cancel",vec2(448,442),vec2(64,35),vec(255,245,235))
                    EGPR:egpBoxOutline(200,vec2(256,200),vec2(490,32))
                    EGPR:egpTextLayout(201,"Distance Counter Setup",vec2(11,184),vec2(490,32))
                    EGPR:egpAlign(201,1,1)
                    EGPR:egpSize(201,20)
                    EGPR:egpFont(201,"Arial")
                    
                    EGPR:egpBoxLabeled(202,vec2(45,260),vec2(180,80),"Distance Counter Preset (feet)",vec(255))
                    EGPR:egpBoxLabeled(205,vec2(320,260),vec2(140,80),"Distance Counter Mode",vec(255))
                    
                    EGPR:egpBox(208,vec2(390,286),vec2(128,16))
                    EGPR:egpColor(208,vec(60,80,190))
                    
                    EGPR:egpText(209,"Count Up From Zero",vec2(330,280))
                    EGPR:egpSize(209,12)
                    EGPR:egpFont(209,"Arial")
                    
                    EGPR:egpText(210,"Count Down From Preset",vec2(330,310))
                    EGPR:egpSize(210,12)
                    EGPR:egpFont(210,"Arial")
                    
                    EGPR:egpBox(211,vec2(96,300),vec2(20,45))
                    EGPR:egpColor(211,vec(36))
                    
                    EGPR:egpTextLayout(212,"00000",vec2(45,260),vec2(180,80))
                    EGPR:egpAlign(212,1,1)
                    EGPR:egpSize(212,42)
                    EGPR:egpFont(212,"Arial")
                    
                    EGPR:egpSetText(194,"1200-1")
                    EGPR:egpSetText(195,"Use Number Keys To Enter New Preset Value, Back Space To Modify\nExisting Value.")
                }
                if(chatClk(owner())|clk("buttonclk")){
                    if(LastSaid==".rfb4"){
                        timer("ready",100)
                        DistReady=0
                        DistDigits:removeNumber(DistDigits:count())
                    }
                    if(LastSaid==".rfb7"){
                        DistCountDown=(DistDigits[1,number]:toString()+DistDigits[2,number]:toString()+DistDigits[3,number]:toString()+DistDigits[4,number]:toString()+DistDigits[5,number]:toString()):toNumber()
                        RPage=2
                        RPageVar=0
                    }
                    if(LastSaid==".rfb8"){
                        RPage=2
                        RPageVar=0
                        DistReady=0
                    }
                    if(DistDigits:count()<=4&DistReady){
                        InputDigit=LastSaid:sub(4,5)
                        DistDigits:pushNumber(InputDigit:toNumber())
                    }
                    EGPR:egpSetText(212,DistDigits[1,number]:toString()+DistDigits[2,number]:toString()+DistDigits[3,number]:toString()+DistDigits[4,number]:toString()+DistDigits[5,number]:toString())
                    EGPR:egpPos(211,vec2(96+(DistDigits:count()*19),300))
                    EGPR:egpColor(211,vec(36)*((DistDigits:count())<5))
                }
            break
        }
    break
}
}
