@name Chessie's GEVO SDIS V1
@inputs RLCPT:entity EGPL:wirelink EGPR:wirelink CtlTable:table Consist_Data:table Number:string On FuelLevel
@outputs BrakeCutIn FeedPressure Consist_Output:table TripOptimizerOn TripOptimizerSpeed Check PosX PosY
@persist SpeedRedline SpeedYellowline Railroad:string LPage RPage LPageVar RPageVar Distance LastSaid:string Active D:wirelink LTopVisible RTopVisible DistMode NewBrakeCutIn NewIsolatedBraking NewFeedPressure IsolatedBraking
@persist CountDown DistCountDown Dist InputDigit:string DistDigits:table DistReady FuelCap SlowSpeedOn SetSlowSpeed MessageL:string LPageN:string MessageR:string RPageN:string TripReady TripDigits:table Brightness WorldData:table MPH
@trigger On

if(first()|dupefinished()|(~EGPL|~EGPR|~Number)){
    EGPL:egpClear()
    EGPR:egpClear()
    #Config
    Railroad="R&K" #Railroad name
    FuelCap=5000 #Max capacity of your fuel tank
    #End of Config
    
    #[Instructions
    In terms of buttons, here's how they work:
        .lfb1
        L is the display, can be L or R.
        F specifies if it's a function key or not (top row key).
        B is just button.
        The number following all of that is the button you want to use, 0-9 for the non-functions, 1-8 for the functions.
    Wiring:
        Wiring should be relatively straight forward, Consist_Data is nothing to be worried about, I will be releasing GE Trip Optimizer at a later date that will use that.
        Don't bother wiring FeedPressure unless your stand has a FeedPressure input.
      ]#
    
    
    
    LPage=0
    LPageVar=0
    RPage=0
    RPageVar=0
    LastSaid=""
    FeedPressure=90
    NewFeedPressure=90
    DistMode=0
    CountDown=0
    DistReady=0
    Active=0
    LTopVisible=0
    RTopVisible=0
    TripOptimizerSpeed=25
    TripOptimizerOn=0
    SlowSpeedOn=0
    SetSlowSpeed=5
    TripDigits=table()
    NewBrakeCutIn=0
    NewIsolatedBraking=0
    BrakeCutIn=0
    IsolatedBraking=0
    
    #Funcs
    function void wirelink:egpBoxLabeled(Index, Pos:vector2, Size:vector2, Label:string, Color:vector){
        local E = This
        local LabLenPix = (Label:length()*5)+9
        
        E:egpBoxOutline(Index, vec2((Pos:x() + Size:x() / 2), (Pos:y() + Size:y() / 2)), Size)
        E:egpColor(Index,Color)
        E:egpBox(Index + 1, vec2(Pos:x() + (Size:x() / 2), Pos:y()), vec2(LabLenPix, 15))
        E:egpColor(Index + 1, vec(0))
        E:egpTextLayout(Index + 2, Label, vec2(Pos:x(), Pos:y() - 13), vec2(Size:x(), 24))
        E:egpFont(Index + 2, "Arial", 12)
        E:egpAlign(Index + 2, 1, 1)
        E:egpColor(Index + 2,Color)
    }
    
    function void wirelink:egpButton(A,Name:string,Pos:vector2,Size:vector2,Color:vector){
        local E=This
        E:egpBox(A,vec2(Pos:x()+Size:x()/2,Pos:y()+Size:y()/2),Size)
        E:egpColor(A,Color)
        E:egpTextLayout(A+1,Name,Pos,Size)
        E:egpColor(A+1,vec(0))
        E:egpAlign(A+1,1,1)
        E:egpSize(A+1,12)
        E:egpFont(A+1,"Arial")
        E:egpBoxOutline(A+2,vec2(Pos:x()+Size:x()/2,Pos:y()+Size:y()/2),Size)
        E:egpColor(A+2,vec(0))
    }
    
    #Display Top Portion

    function void wirelink:egpTopUpdate(){
    local D=This
    #Speedometer
    D:egpWedge(1,vec2(256,90),vec2(60,67))
    D:egpSize(1,-28)
    D:egpAngle(1,18)
    D:egpColor(1,vec(220,40+120,30))
    
    D:egpWedge(2,vec2(256,90),vec2(60,67))
    D:egpSize(2,-28)
    D:egpAngle(2,10)
    D:egpColor(2,vec(220,40,30))

    D:egpCircle(3,vec2(256,90),vec2(60-4,74-4))
    D:egpColor(3,vec(0))

    D:egpCircleOutline(4,vec2(256,90),vec2(60,74))
    
    D:egpBox(5,vec2(256,143),vec2(140,80))
    D:egpColor(5,vec(0))
    
    #10 marks
    D:egpLine(6,vec2(256+(cos(-190+25*0)*54),90+(sin(-190+25*0)*68)),vec2(256+(cos(-190+25*0)*60),90+(sin(-190+25*0)*74)))
    D:egpLine(7,vec2(256+(cos(-190+25*1)*54),90+(sin(-190+25*1)*68)),vec2(256+(cos(-190+25*1)*60),90+(sin(-190+25*1)*74)))
    D:egpLine(8,vec2(256+(cos(-190+25*2)*54),90+(sin(-190+25*2)*68)),vec2(256+(cos(-190+25*2)*60),90+(sin(-190+25*2)*74)))
    D:egpLine(9,vec2(256+(cos(-190+25*3)*54),90+(sin(-190+25*3)*68)),vec2(256+(cos(-190+25*3)*60),90+(sin(-190+25*3)*74)))
    D:egpLine(10,vec2(256+(cos(-190+25*4)*54),90+(sin(-190+25*4)*68)),vec2(256+(cos(-190+25*4)*60),90+(sin(-190+25*4)*74)))
    D:egpLine(11,vec2(256+(cos(-190+25*5)*54),90+(sin(-190+25*5)*68)),vec2(256+(cos(-190+25*5)*60),90+(sin(-190+25*5)*74)))
    D:egpLine(12,vec2(256+(cos(-190+25*6)*54),90+(sin(-190+25*6)*68)),vec2(256+(cos(-190+25*6)*60),90+(sin(-190+25*6)*74)))
    D:egpLine(13,vec2(256+(cos(-190+25*7)*54),90+(sin(-190+25*7)*68)),vec2(256+(cos(-190+25*7)*60),90+(sin(-190+25*7)*74)))
    D:egpLine(14,vec2(256+(cos(-190+25*8)*54),90+(sin(-190+25*8)*68)),vec2(256+(cos(-190+25*8)*60),90+(sin(-190+25*8)*74)))
    
    #5 marks
    D:egpLine(15,vec2(256+(cos(-190+25*0.5)*58),90+(sin(-190+25*0.5)*72)),vec2(256+(cos(-190+25*0.5)*60),90+(sin(-190+25*0.5)*74)))
    D:egpLine(16,vec2(256+(cos(-190+25*1.5)*58),90+(sin(-190+25*1.5)*72)),vec2(256+(cos(-190+25*1.5)*60),90+(sin(-190+25*1.5)*74)))
    D:egpLine(17,vec2(256+(cos(-190+25*2.5)*58),90+(sin(-190+25*2.5)*72)),vec2(256+(cos(-190+25*2.5)*60),90+(sin(-190+25*2.5)*74)))
    D:egpLine(18,vec2(256+(cos(-190+25*3.5)*58),90+(sin(-190+25*3.5)*72)),vec2(256+(cos(-190+25*3.5)*60),90+(sin(-190+25*3.5)*74)))
    D:egpLine(19,vec2(256+(cos(-190+25*4.5)*58),90+(sin(-190+25*4.5)*72)),vec2(256+(cos(-190+25*4.5)*60),90+(sin(-190+25*4.5)*74)))
    D:egpLine(20,vec2(256+(cos(-190+25*5.5)*58),90+(sin(-190+25*5.5)*72)),vec2(256+(cos(-190+25*5.5)*60),90+(sin(-190+25*5.5)*74)))
    D:egpLine(21,vec2(256+(cos(-190+25*6.5)*58),90+(sin(-190+25*6.5)*72)),vec2(256+(cos(-190+25*6.5)*60),90+(sin(-190+25*6.5)*74)))
    D:egpLine(22,vec2(256+(cos(-190+25*7.5)*58),90+(sin(-190+25*7.5)*72)),vec2(256+(cos(-190+25*7.5)*60),90+(sin(-190+25*7.5)*74)))
    
    #Some numbers (i hope you didn't get sick of trig yet)
    D:egpTextLayout(23,"0",vec2(256+((cos(-190+25*0)*46)-10),90+((sin(-190+25*0)*60)-5)),vec2(20,10))
    D:egpAlign(23,1,1)
    D:egpSize(23,10)
    
    D:egpTextLayout(24,"10",vec2(256+((cos(-190+25*1)*46)-10),90+((sin(-190+25*1)*60)-5)),vec2(20,10))
    D:egpAlign(24,1,1)
    D:egpSize(24,10)
    
    D:egpTextLayout(25,"20",vec2(256+((cos(-190+25*2)*46)-10),90+((sin(-190+25*2)*60)-5)),vec2(20,10))
    D:egpAlign(25,1,1)
    D:egpSize(25,10)
    
    D:egpTextLayout(26,"30",vec2(256+((cos(-190+25*3)*46)-10),90+((sin(-190+25*3)*60)-5)),vec2(20,10))
    D:egpAlign(26,1,1)
    D:egpSize(26,10)
    
    D:egpTextLayout(27,"40",vec2(256+((cos(-190+25*4)*46)-10),90+((sin(-190+25*4)*60)-5)),vec2(20,10))
    D:egpAlign(27,1,1)
    D:egpSize(27,10)
    
    D:egpTextLayout(28,"50",vec2(256+((cos(-190+25*5)*46)-10),90+((sin(-190+25*5)*60)-5)),vec2(20,10))
    D:egpAlign(28,1,1)
    D:egpSize(28,10)
    
    D:egpTextLayout(29,"60",vec2(256+((cos(-190+25*6)*46)-10),90+((sin(-190+25*6)*60)-5)),vec2(20,10))
    D:egpAlign(29,1,1)
    D:egpSize(29,10)
    
    D:egpTextLayout(30,"70",vec2(256+((cos(-190+25*7)*46)-10),90+((sin(-190+25*7)*60)-5)),vec2(20,10))
    D:egpAlign(30,1,1)
    D:egpSize(30,10)
    
    D:egpTextLayout(31,"80",vec2(256+((cos(-190+25*8)*46)-10),90+((sin(-190+25*8)*60)-5)),vec2(20,10))
    D:egpAlign(31,1,1)
    D:egpSize(31,10)
    
    D:egpCircle(32,vec2(256,90),vec2(6,6*1.233))
    
    D:egpBox(33,vec2(256,90),vec2(0))
    
    D:egpBox(34,vec2(0,25),vec2(2,50))
    D:egpParent(34,32)
    
    D:egpTextLayout(35,"0.00",vec2(256-40,120-40),vec2(80,80))
    D:egpSize(35,18)
    D:egpAlign(35,1,1)
    
    D:egpTextLayout(93,"mph",vec2(256+10,120-39),vec2(80,80))
    D:egpSize(93,12)
    D:egpAlign(93,1,1)
    
    #Text Boxes
    D:egpBoxLabeled(36,vec2(10,26),vec2(84,58),"ER",vec(255))
    D:egpBoxLabeled(39,vec2(96,26),vec2(84,58),"BP",vec(255))
    D:egpBoxLabeled(42,vec2(10,92),vec2(40,34),"Rear",vec(255))
    D:egpBoxLabeled(45,vec2(10+44,92),vec2(40,34),"Flow",vec(255))
    D:egpBoxLabeled(48,vec2(96,92),vec2(40,34),"Main",vec(255))
    D:egpBoxLabeled(51,vec2(96+44,92),vec2(40,34),"BC",vec(255))
    D:egpBoxLabeled(57,vec2(330,20+38),vec2(110,30),"Consist",vec(255))
    D:egpBoxLabeled(60,vec2(330,20+38+38),vec2(110,30),"Effort Klb",vec(45,255,75))
    D:egpBoxLabeled(66,vec2(330+55+55+4,20+38),vec2(55,30),"Reverser",vec(255))
    D:egpBoxLabeled(69,vec2(330+55+55+4,20+38+38),vec2(55,30),"Throttle",vec(45,255,75))
    
    #Time & Date
    D:egpText(54,"07:50:53",vec2(10,0))
    D:egpSize(54,12)
    D:egpColor(54,vec(120,200,255))
    
    D:egpText(55,"01/22/2021",vec2(75,0))
    D:egpSize(55,12)
    D:egpColor(55,vec(120,200,255))
    
    #Railroad & Numbah
    D:egpText(56,Railroad+"  "+Number,vec2(438,0))
    D:egpSize(56,12)
    D:egpColor(56,vec(120,200,255))
    
    #Distance
    D:egpText(64,"0 ft",vec2(382,0))
    D:egpSize(64,12)
    D:egpColor(64,vec(255))
    
    D:egpBox(84,vec2(365,8),vec2(0))
    
    D:egpTriangle(85,vec2(-4,-4),vec2(4,-4),vec2(0,4))
    D:egpSize(85,12)
    D:egpParent(85,84)
    D:egpColor(85,vec(120,200,255))
    
    D:egpTriangleOutline(86,vec2(-4,-4),vec2(4,-4),vec2(0,4))
    D:egpSize(86,1)
    D:egpParent(86,84)
    D:egpColor(86,vec(50,120,140))
    
    #Brake Texts
    D:egpTextLayout(72,"ER",vec2(10,26),vec2(84,58))
    D:egpAlign(72,1,1)
    D:egpSize(72,38)
    D:egpFont(72,"Arial")
    
    D:egpTextLayout(73,"BP",vec2(96,26),vec2(84,58))
    D:egpAlign(73,1,1)
    D:egpSize(73,38)
    D:egpFont(73,"Arial")
    
    D:egpTextLayout(74,"Rear",vec2(10,92),vec2(40,34))
    D:egpAlign(74,1,1)
    D:egpSize(74,14)
    D:egpFont(74,"Arial")
    
    D:egpTextLayout(75,"Flow",vec2(10+44,92),vec2(40,34))
    D:egpAlign(75,1,1)
    D:egpSize(75,14)
    D:egpFont(75,"Arial")
    
    D:egpTextLayout(76,"Main",vec2(96,92),vec2(40,34))
    D:egpAlign(76,1,1)
    D:egpSize(76,14)
    D:egpFont(76,"Arial")
    
    D:egpTextLayout(77,"BC",vec2(96+44,92),vec2(40,34))
    D:egpAlign(77,1,1)
    D:egpSize(77,14)
    D:egpFont(77,"Arial")
    
    #Throttle & Reverser Text
    D:egpTextLayout(78,"Throttle",vec2(330+55+55+4,20+38+38),vec2(55,30))
    D:egpAlign(78,1,1)
    D:egpSize(78,16)
    D:egpFont(78,"Arial")
    D:egpColor(78,vec(45,255,75))
    
    D:egpTextLayout(79,"Reverser",vec2(330+55+55+4,20+38),vec2(55,30))
    D:egpAlign(79,1,1)
    D:egpSize(79,16)
    D:egpFont(79,"Arial")
    D:egpColor(79,vec(255))
    
    #Tractive Effort
    D:egpTextLayout(80,"TE",vec2(296,20+38+38),vec2(110,30))
    D:egpAlign(80,1,1)
    D:egpSize(80,16)
    D:egpFont(80,"Arial")
    D:egpColor(80,vec(255))
    #TE Bar Graph
    D:egpBox(81,vec2(375,20+38+38+10),vec2(2,8))
    D:egpColor(81,vec(255))
    
    D:egpBox(82,vec2(373,20+38+38+10),vec2(4,8))
    D:egpColor(82,vec(0))
    
    D:egpBox(83,vec2(403,20+38+38+15),vec2(57,1))
    D:egpColor(83,vec(255))
    
    D:egpTextLayout(94,"0",vec2(403-56/2-7,20+38+38+19),vec2(14,10))
    D:egpAlign(94,1,1)
    D:egpFont(94,"Arial")
    D:egpColor(94,vec(255))
    D:egpSize(94,10)
    
    D:egpTextLayout(97,"180",vec2(403+56/2-7,20+38+38+19),vec2(14,10))
    D:egpAlign(97,1,1)
    D:egpFont(97,"Arial")
    D:egpColor(97,vec(255))
    D:egpSize(97,10)
    
    #Consist Effort
    D:egpTextLayout(100,"0:1",vec2(350,65),vec2(110,30))
    D:egpAlign(100,0,0)
    D:egpFont(100,"Arial")
    D:egpColor(100,vec(255))
    D:egpSize(100,16)
    
    D:egpTextLayout(101,"200",vec2(386,65),vec2(110,30))
    D:egpAlign(101,0,0)
    D:egpFont(101,"Arial")
    D:egpColor(101,vec(45,255,75))
    D:egpSize(101,16)
    
    #Messages & Levels & Screens
    D:egpBoxOutline(190,vec2(225,415),vec2(450,50))
    D:egpBoxOutline(191,vec2(512-62/2,415),vec2(63,50))
    D:egpBoxOutline(192,vec2(512-62/2,415),vec2(63,1))
    
    D:egpTextLayout(193,"L1",vec2((512-62/2)-31,415-25),vec2(63,25))
    D:egpAlign(193,1,1)
    D:egpColor(193,vec(155,205,255))
    D:egpFont(193,"Arial")
    
    D:egpTextLayout(194,"0000-0",vec2((512-62/2)-31,415),vec2(63,25))
    D:egpAlign(194,1,1)
    D:egpColor(194,vec(155,205,255))
    D:egpFont(194,"Arial")
    
    D:egpTextLayout(195,"Ready",vec2(2,415-27),vec2(450,50))
    D:egpAlign(195,0,2)
    D:egpColor(195,vec(255))
    D:egpFont(195,"Arial")
    D:egpSize(195,16)
    }
    timer("run",800)
}
if(clk("run")){
    Active=1
}
if(Active){
    timer("clk", 250)
}
if(Active&On){
interval(100)
RLCPTW=RLCPT:wirelink()
MPH=RLCPTW["MPH",number]
#Left Display Top
#Speedo
EGPL:egpPos(33,vec2(256-(cos(-11+(MPH*2.52))*60),90-(sin(-11+(MPH*2.52))*74)))

PosX=(EGPL:egpPos(33)-EGPL:egpPos(32)):x()
PosY=(EGPL:egpPos(33)-EGPL:egpPos(32)):y()
EGPL:egpAngle(32,vec2(PosY,PosX):toAngle())

EGPL:egpPos(34,vec2(0,EGPL:egpPos(33):distance(EGPL:egpPos(32))/2))
EGPL:egpSize(34,vec2(2,EGPL:egpPos(33):distance(EGPL:egpPos(32))))

EGPL:egpSetText(35,(MPH:toString()!="-0" ? (round(MPH,2)<10 ? format("%.2f",MPH) : format("%.1f",MPH)) : "0.00"))
#Brakes
EGPL:egpSetText(72,round(RLCPTW["EqualRes",number],0):toString())
EGPL:egpSetText(73,round(RLCPTW["BrakePipe",number],0):toString())
EGPL:egpSetText(74,"---")
EGPL:egpSetText(75,round(RLCPTW["CFM",number],0):toString())
EGPL:egpSetText(76,round(RLCPTW["MainRes",number],0):toString())
EGPL:egpSetText(77,round(RLCPTW["Cyl",number],0):toString())

#Date + Time
WorldData=date()

EGPL:egpSetText(54,format("%02d:%02d:%02d",time("hour"),time("min"),time("sec")))

EGPL:egpSetText(55,format("%02d/%02d/%04d",WorldData["month",number],WorldData["day",number],WorldData["year",number]))

#Throttle & Reverser
EGPL:egpSetText(78,!CtlTable["SetDynamics",number] ? CtlTable["SetThrottle",number]!=0 ? "N"+CtlTable["SetThrottle",number]/12.5 : "Idle" : 
CtlTable["SetDynamics",number]!=10 ? "D"+round(CtlTable["SetDynamics",number]/12.5,0):toString() : "Set")

EGPL:egpColor(69,(CtlTable["SetDynamics",number] ? vec(255,200,35) : vec(45,255,75)))
EGPL:egpColor(71,(CtlTable["SetDynamics",number] ? vec(255,200,35) : vec(45,255,75)))
EGPL:egpColor(78,(CtlTable["SetDynamics",number] ? vec(255,200,35) : vec(45,255,75)))

switch(CtlTable["SetReverser",number]){
    case -1,
        EGPL:egpSetText(79,"Rev")
    break
    case 0,
        EGPL:egpSetText(79,"Cntr")
    break
    case 1,
        EGPL:egpSetText(79,"Fwd")
    break
}

#Tractive Effort
EGPL:egpColor(60,(CtlTable["SetDynamics",number] ? vec(255,200,35) : vec(45,255,75)))
EGPL:egpColor(62,(CtlTable["SetDynamics",number] ? vec(255,200,35) : vec(45,255,75)))
EGPL:egpColor(80,(CtlTable["SetDynamics",number] ? vec(255,200,35) : vec(45,255,75)))
EGPL:egpColor(81,(CtlTable["SetDynamics",number] ? vec(255,200,35) : vec(45,255,75)))
EGPL:egpSetText(80,round(RLCPTW["TE_LBF",number]/1000):toString())

EGPL:egpPos(81,vec2(375+clamp(RLCPTW["TE_LBF",number],0,180000)/6300,20+38+38+10))
EGPL:egpSize(81,vec2(clamp(RLCPTW["TE_LBF",number],0,180000)/3150,8))

#Consist Effort
EGPL:egpSetText(100,Consist_Data[3,number]:toString()+":"+Consist_Data[2,number]:toString())
EGPL:egpSetText(101,round(Consist_Data[1,number]/1000):toString())
EGPL:egpColor(101,(CtlTable["SetDynamics",number] ? vec(255,200,35) : vec(45,255,75)))
EGPL:egpSetText(102,"Lead:  "+(!CtlTable["SetDynamics",number] ? CtlTable["SetThrottle",number]!=0 ? "N"+CtlTable["SetThrottle",number]/12.5 : "Idle" : 
CtlTable["SetDynamics",number]!=10 ? "D"+round(CtlTable["SetDynamics",number]/12.5,0):toString() : "Set"))
EGPL:egpSetText(103,"Trail:  "+(!CtlTable["SetDynamics",number] ? CtlTable["SetThrottle",number]!=0 ? "N"+CtlTable["SetThrottle",number]/12.5 : "Idle" : 
CtlTable["SetDynamics",number]!=10 ? "D"+round(CtlTable["SetDynamics",number]/12.5,0):toString() : "Set"))

#Distance
EGPL:egpSetText(64,floor(Dist):toString()+" ft")
EGPL:egpAngle(84,180+CountDown*180)




#Right Display Top
#Speedo
EGPR:egpPos(33,vec2(256-(cos(-11+(MPH*2.52))*60),90-(sin(-11+(MPH*2.52))*74)))

EGPR:egpAngle(32,vec2(PosY,PosX):toAngle())

EGPR:egpPos(34,vec2(0,EGPL:egpPos(33):distance(EGPL:egpPos(32))/2))
EGPR:egpSize(34,vec2(2,EGPL:egpPos(33):distance(EGPL:egpPos(32))))

EGPR:egpSetText(35,(MPH:toString()!="-0" ? (round(MPH,2)<10 ? format("%.2f",MPH) : format("%.1f",MPH)) : "0.00"))
#Brakes
EGPR:egpSetText(72,round(RLCPTW["EqualRes",number],0):toString())
EGPR:egpSetText(73,round(RLCPTW["BrakePipe",number],0):toString())
EGPR:egpSetText(74,"---")
EGPR:egpSetText(75,round(RLCPTW["CFM",number],0):toString())
EGPR:egpSetText(76,round(RLCPTW["MainRes",number],0):toString())
EGPR:egpSetText(77,round(RLCPTW["Cyl",number],0):toString())

#Throttle & Reverser
EGPR:egpSetText(78,!CtlTable["SetDynamics",number] ? CtlTable["SetThrottle",number]!=0 ? "N"+CtlTable["SetThrottle",number]/12.5 : "Idle" : 
CtlTable["SetDynamics",number]!=10 ? "D"+round(CtlTable["SetDynamics",number]/12.5,0):toString() : "Set")

EGPR:egpColor(69,(CtlTable["SetDynamics",number] ? vec(255,200,35) : vec(45,255,75)))
EGPR:egpColor(71,(CtlTable["SetDynamics",number] ? vec(255,200,35) : vec(45,255,75)))
EGPR:egpColor(78,(CtlTable["SetDynamics",number] ? vec(255,200,35) : vec(45,255,75)))

switch(CtlTable["SetReverser",number]){
    case -1,
        EGPR:egpSetText(79,"Rev")
    break
    case 0,
        EGPR:egpSetText(79,"Cntr")
    break
    case 1,
        EGPR:egpSetText(79,"Fwd")
    break
}

#Tractive Effort
EGPR:egpColor(60,(CtlTable["SetDynamics",number] ? vec(255,200,35) : vec(45,255,75)))
EGPR:egpColor(62,(CtlTable["SetDynamics",number] ? vec(255,200,35) : vec(45,255,75)))
EGPR:egpColor(80,(CtlTable["SetDynamics",number] ? vec(255,200,35) : vec(45,255,75)))
EGPR:egpColor(81,(CtlTable["SetDynamics",number] ? vec(255,200,35) : vec(45,255,75)))
EGPR:egpSetText(80,round(RLCPTW["TE_LBF",number]/1000):toString())

EGPR:egpPos(81,vec2(375+clamp(RLCPTW["TE_LBF",number],0,180000)/6300,20+38+38+10))
EGPR:egpSize(81,vec2(clamp(RLCPTW["TE_LBF",number],0,180000)/3150,8))

#Consist Effort
EGPR:egpSetText(100,Consist_Data[3,number]:toString()+":"+Consist_Data[2,number]:toString())
EGPR:egpSetText(101,round(Consist_Data[1,number]/1000):toString())
EGPR:egpColor(101,(CtlTable["SetDynamics",number] ? vec(255,200,35) : vec(45,255,75)))
EGPR:egpSetText(102,"Lead:  "+(!CtlTable["SetDynamics",number] ? CtlTable["SetThrottle",number]!=0 ? "N"+CtlTable["SetThrottle",number]/12.5 : "Idle" : 
CtlTable["SetDynamics",number]!=10 ? "D"+round(CtlTable["SetDynamics",number]/12.5,0):toString() : "Set"))
EGPR:egpSetText(103,"Trail:  "+(!CtlTable["SetDynamics",number] ? CtlTable["SetThrottle",number]!=0 ? "N"+CtlTable["SetThrottle",number]/12.5 : "Idle" : 
CtlTable["SetDynamics",number]!=10 ? "D"+round(CtlTable["SetDynamics",number]/12.5,0):toString() : "Set"))

#Date + Time
EGPR:egpSetText(54,format("%02d:%02d:%02d",time("hour"),time("min"),time("sec")))

EGPR:egpSetText(55,format("%02d/%02d/%04d",WorldData["month",number],WorldData["day",number],WorldData["year",number]))

#Distance
EGPR:egpSetText(64,floor(Dist):toString()+" ft")
EGPR:egpAngle(84,180+CountDown*180)





#Buttons & Pages (yay)

#[Preset Vectors for Buttons
TopRowHeight=442
BottomRowHeight=477

Button1Horizontal=0
Button2Horizontal=64
Button3Horizontal=128
Button4Horizontal=192
Button5Horizontal=256
Button6Horizontal=320
Button7Horizontal=384
Button8Horizontal=448
]#

EGPL:egpSetText(194,LPageN)
EGPL:egpSetText(195,MessageL)
        
EGPR:egpSetText(194,RPageN)
EGPR:egpSetText(195,MessageR)
runOnChat(1)
if(chatClk(owner())&(owner():lastSaid():sub(0,2)==".l"|owner():lastSaid():sub(0,2)==".r")){
    (EGPL:entity()):soundPlay(1,0,"monkssounds/buttons/button5.wav")
    (EGPR:entity()):soundPlay(2,0,"monkssounds/buttons/button5.wav")
    hideChat(1)
    LastSaid=owner():lastSaid()
}
else{
    LastSaid=""
}
if(DistMode>2){
    DistMode=0
}
if(DistMode==0){
    Distance=0
}
elseif(DistMode==1){
    Distance+=((RLCPTW["MPH",number]*5280)/36000)
}
elseif(DistMode==2){
    Distance+=0
}
Dist=(CountDown ? clamp(DistCountDown-Distance,0,99999) : clamp(Distance,0,99999))
if(changed(LPage)|changed(LPageVar)){
    EGPL:egpClear()
}
if(changed(RPage)|changed(RPageVar)){
    EGPR:egpClear()
}
Consist_Output=table(TripOptimizerOn,TripOptimizerSpeed,Check,SlowSpeedOn*SetSlowSpeed,SlowSpeedOn*SetSlowSpeed)
####################################################################################################################################################                Left Display
switch(LPage){
    case 0,####################################################################################################################################################     Main Page
        switch(LPageVar){
            case 0,
                LTopVisible=1
                if(clk("buttonclk")){
                    stoptimer("buttonclk")
                    EGPL:egpButton(104+3*0,"Air\nBrake",vec2(0,442),vec2(64,35),vec(245,250,255))
                    switch(DistMode){
                        case 0,
                        EGPL:egpButton(104+3*1,"Distance\nStart",vec2(0,477),vec2(64,35),vec(155,205,255))
                        break
                        case 1,
                        EGPL:egpButton(104+3*1,"Distance\nStop",vec2(0,477),vec2(64,35),vec(155,205,255))
                        break
                        case 2,
                        EGPL:egpButton(104+3*1,"Distance\nReset",vec2(0,477),vec2(64,35),vec(155,205,255))
                        break
                    }
                    EGPL:egpButton(104+3*2,"Distance\nSetup",vec2(64,477),vec2(64,35),vec(155,205,255))
                    EGPL:egpButton(104+3*3,"More\nMenu",vec2(448,477),vec2(64,35),vec(155,205,255))
                    EGPL:egpButton(104+3*4,"Speed\nControl",vec2(320,442),vec2(64,35),vec(245,250,255))
                    EGPL:egpButton(104+3*5,"Trip\nOptimizer",vec2(256,477),vec2(64,35),vec(155,205,255))
                    
                    
                    EGPL:egpBoxLabeled(200,vec2(10,200),vec2(100,30),"Rail Cleaner",vec(255))
                    EGPL:egpBoxLabeled(203,vec2(10,255),vec2(100,80),"EOT",vec(255))
                    EGPL:egpBoxLabeled(206,vec2(10,356),vec2(50,34),"Ind Brk",vec(255))
                    EGPL:egpBoxLabeled(209,vec2(10+50,356),vec2(50,34),"Auto Brk",vec(255))
                    EGPL:egpBoxLabeled(212,vec2(402,356),vec2(100,34),"Fuel",vec(255))
 
                    EGPL:egpText(215,"0 Gal",vec2(462,370))
                    EGPL:egpFont(215,"Arial")
                    EGPL:egpSize(215,10)
                    
                    EGPL:egpBox(216,vec2(432,380),vec2(30,2))

                    EGPL:egpBox(217,vec2(432,375),vec2(30,10))
                    EGPL:egpColor(217,vec(60,80,190))
                    
                    EGPL:egpBox(218,vec2(432-16.5,375),vec2(4,10))
                    EGPL:egpColor(218,vec(0))
                    
                    EGPL:egpBox(219,vec2(432+16.5,375),vec2(4,10))
                    EGPL:egpColor(219,vec(0))
                    
                    EGPL:egpText(220,"E",vec2(406,370))
                    EGPL:egpFont(220,"Arial")
                    EGPL:egpSize(220,10)
                    
                    EGPL:egpText(221,"F",vec2(451,370))
                    EGPL:egpFont(221,"Arial")
                    EGPL:egpSize(221,10)
                    
                    EGPL:egpTextLayout(222,"Off",vec2(10,200),vec2(100,30))
                    EGPL:egpFont(222,"Arial")
                    EGPL:egpSize(222,12)
                    EGPL:egpAlign(222,1,1)
                    
                    EGPL:egpTextLayout(223,"ID Code: 00000",vec2(10,262),vec2(100,30))
                    EGPL:egpFont(223,"Arial")
                    EGPL:egpSize(223,12)
                    EGPL:egpAlign(223,1,1)
                    
                    EGPL:egpTextLayout(224,"Marker: Off",vec2(10,262+19),vec2(100,30))
                    EGPL:egpFont(224,"Arial")
                    EGPL:egpSize(224,12)
                    EGPL:egpAlign(224,1,1)
                    
                    EGPL:egpTextLayout(225,"EM: Disabled",vec2(10,262+38),vec2(100,30))
                    EGPL:egpFont(225,"Arial")
                    EGPL:egpSize(225,12)
                    EGPL:egpAlign(225,1,1)
                    
                    EGPL:egpTextLayout(226,"Lead",vec2(10,356),vec2(50,34))
                    EGPL:egpFont(226,"Arial")
                    EGPL:egpSize(226,12)
                    EGPL:egpAlign(226,1,1)
                    
                    EGPL:egpTextLayout(227,"Cut-In",vec2(10+50,356),vec2(50,34))
                    EGPL:egpFont(227,"Arial")
                    EGPL:egpSize(227,12)
                    EGPL:egpAlign(227,1,1)
                    
                    EGPL:egpSetText(194,"0000-0")
                    EGPL:egpSetText(195,"Ready")
                    LPageN="0000-0"
                }
                if(TripOptimizerOn){
                    MessageL="Auto Control Engaged\nSet Speed: "+TripOptimizerSpeed:toString()+" Mph"
                }
                else{
                    MessageL="Ready"
                }
                if(changed(LastSaid)&LastSaid==".lb8"){
                    LPageVar=1
                }
                if(changed(LastSaid)&LastSaid==".lb1"){
                    DistMode++
                }
                if(DistMode>2){
                    DistMode=0
                }
                if(changed(LastSaid)&LastSaid==".lfb1"){
                    LPage=1
                    LPageVar=0
                }
                if(changed(LastSaid)&LastSaid==".lb2"){
                    LPage=2
                    LPageVar=0
                }
                if(changed(LastSaid)&LastSaid==".lfb6"){
                    LPage=3
                    LPageVar=0
                }
                if(changed(LastSaid)&LastSaid==".lb5"){
                    LPage=4
                    LPageVar=0
                }
                EGPL:egpSetText(215,ceil(FuelLevel):toString()+" Gal")
                
                EGPL:egpPos(217,vec2(417+(FuelLevel/320)/(FuelCap/5000),375))
                EGPL:egpSize(217,vec2((FuelLevel/160)/(FuelCap/5000),10))
                
                EGPL:egpSetText(226,IsolatedBraking ? "Lead" : "Trail")
                EGPL:egpSetText(227,BrakeCutIn ? "Cut-In" : "Cut-Out")
            break
            case 1,
                LTopVisible=1
                if(clk("buttonclk")){
                    stoptimer("buttonclk")
                    EGPL:egpButton(104+3*0,"Exit",vec2(448,442),vec2(64,35),vec(255,245,235))
                    EGPL:egpSetText(194,"0000-1")
                    EGPL:egpSetText(195,"Ready")
                    LPageN="0000-1"
                    MessageL="Ready"
                }
                if(LastSaid==".lfb8"){
                    LPageVar=0
                }
            break
        }
    break
    case 1,####################################################################################################################################################     Airbrake Setup
        switch (LPageVar){
            case 0,
                LTopVisible=1
                if(clk("buttonclk")){
                    stoptimer("buttonclk")
                    EGPL:egpButton(104+3*0,"Change Setup",vec2(128,442),vec2(64,35),vec(245,250,255))
                    EGPL:egpButton(104+3*1,"Exit",vec2(448,442),vec2(64,35),vec(245,250,255))
                    EGPL:egpBoxOutline(200,vec2(256,200),vec2(490,32))
                    EGPL:egpTextLayout(201,"Electronic Air Brake Setup",vec2(11,184),vec2(490,32))
                    EGPL:egpAlign(201,1,1)
                    EGPL:egpSize(201,20)
                    EGPL:egpFont(201,"Arial")
                    EGPL:egpBoxLabeled(202,vec2(25,230),vec2(120,50),"Feed Valve Setting",vec(255))
                    EGPL:egpBoxLabeled(205,vec2(25+130,230),vec2(120,50),"Automatic Brake",vec(255))
                    EGPL:egpBoxLabeled(208,vec2(25+260,230),vec2(120,50),"Independent Brake",vec(255))
                    EGPL:egpTextLayout(211,"Current\nSetup",vec2(408,230),vec2(100,50))
                    EGPL:egpAlign(211,1,1)
                    EGPL:egpSize(211,20)
                    EGPL:egpFont(211,"Arial")
                    EGPL:egpSetText(194,"2000-0")
                    EGPL:egpSetText(195,"Ready")
                    LPageN="2000-0"
                    MessageL="Ready"
                }
                if(changed(LastSaid)&LastSaid==".lfb3"){
                    LPage=1
                    LPageVar=1
                }
                if(changed(LastSaid)&LastSaid==".lfb8"){
                    LPage=0
                    LPageVar=0
                }
                if(chatClk(owner())|clk("buttonclk")){
                    EGPL:egpTextLayout(212,floor(FeedPressure):toString(),vec2(25,230),vec2(120,50))
                    EGPL:egpAlign(212,1,1)
                    EGPL:egpSize(212,20)
                    EGPL:egpFont(212,"Arial")

                    EGPL:egpTextLayout(213,(BrakeCutIn ? "Cut In" : "Cut Out"),vec2(25+130,230),vec2(120,50))
                    EGPL:egpAlign(213,1,1)
                    EGPL:egpSize(213,20)
                    EGPL:egpFont(213,"Arial")
                
                    EGPL:egpTextLayout(214,(IsolatedBraking ? "Lead" : "Trail"),vec2(25+260,230),vec2(120,50))
                    EGPL:egpAlign(214,1,1)
                    EGPL:egpSize(214,20)
                    EGPL:egpFont(214,"Arial")
                }
            break
            case 1,
                LTopVisible=1
                if(clk("buttonclk")){
                    stoptimer("buttonclk")
                    EGPL:egpButton(104+3*0,"Increase",vec2(0,442),vec2(64,35),vec(245,250,255))
                    EGPL:egpButton(104+3*1,"Decrease",vec2(64,442),vec2(64,35),vec(245,250,255))
                    EGPL:egpButton(104+3*2,"Cut In/Out",vec2(128,442),vec2(64,35),vec(245,250,255))
                    EGPL:egpButton(104+3*3,"Lead/Trail",vec2(192,442),vec2(64,35),vec(245,250,255))
                    EGPL:egpButton(104+3*4,"Save Changes",vec2(320,442),vec2(64,35),vec(245,250,255))
                    EGPL:egpButton(104+3*5,"Exit",vec2(448,442),vec2(64,35),vec(245,250,255))
                    
                    EGPL:egpBoxOutline(200,vec2(256,200),vec2(490,32))
                    EGPL:egpTextLayout(201,"Electronic Air Brake Setup",vec2(11,184),vec2(490,32))
                    EGPL:egpAlign(201,1,1)
                    EGPL:egpSize(201,20)
                    EGPL:egpFont(201,"Arial")
                    EGPL:egpBoxLabeled(202,vec2(25,230),vec2(120,50),"Feed Valve Setting",vec(255))
                    EGPL:egpBoxLabeled(205,vec2(25+130,230),vec2(120,50),"Automatic Brake",vec(255))
                    EGPL:egpBoxLabeled(208,vec2(25+260,230),vec2(120,50),"Independent Brake",vec(255))
                    EGPL:egpTextLayout(211,"Current\nSetup",vec2(408,230),vec2(100,50))
                    EGPL:egpAlign(211,1,1)
                    EGPL:egpSize(211,20)
                    EGPL:egpFont(211,"Arial")
                    
                    EGPL:egpBoxLabeled(215,vec2(25,290),vec2(120,50),"Feed Valve Setting",vec(255))
                    EGPL:egpBoxLabeled(218,vec2(25+130,290),vec2(120,50),"Automatic Brake",vec(255))
                    EGPL:egpBoxLabeled(221,vec2(25+260,290),vec2(120,50),"Independent Brake",vec(255))
                    
                    EGPL:egpTextLayout(227,"New\nSetup",vec2(408,290),vec2(100,50))
                    EGPL:egpAlign(227,1,1)
                    EGPL:egpSize(227,20)
                    EGPL:egpFont(227,"Arial")
                    
                    EGPL:egpSetText(194,"2000-1")
                    EGPL:egpSetText(195,"Ready")
                    LPageN="2000-1"
                    MessageL="Ready"
                }
                if(LastSaid==".lfb8"){
                    LPage=0
                    LPageVar=0
                }
                if(LastSaid==".lfb1"&NewFeedPressure<110){
                    NewFeedPressure+=5
                }
                if(LastSaid==".lfb2"&NewFeedPressure>80){
                    NewFeedPressure-=5
                }
                if(LastSaid==".lfb3"){
                    NewBrakeCutIn=!NewBrakeCutIn
                }
                if(LastSaid==".lfb4"){
                    NewIsolatedBraking=!NewIsolatedBraking
                }
                if(LastSaid==".lfb6"){
                    FeedPressure=NewFeedPressure
                    BrakeCutIn=NewBrakeCutIn
                    IsolatedBraking=NewIsolatedBraking
                }
                if(chatClk(owner())|clk("buttonclk")){
                    EGPL:egpTextLayout(212,floor(FeedPressure):toString(),vec2(25,230),vec2(120,50))
                    EGPL:egpAlign(212,1,1)
                    EGPL:egpSize(212,20)
                    EGPL:egpFont(212,"Arial")

                    EGPL:egpTextLayout(213,(BrakeCutIn ? "Cut In" : "Cut Out"),vec2(25+130,230),vec2(120,50))
                    EGPL:egpAlign(213,1,1)
                    EGPL:egpSize(213,20)
                    EGPL:egpFont(213,"Arial")
                
                    EGPL:egpTextLayout(214,(IsolatedBraking ? "Lead" : "Trail"),vec2(25+260,230),vec2(120,50))
                    EGPL:egpAlign(214,1,1)
                    EGPL:egpSize(214,20)
                    EGPL:egpFont(214,"Arial")
                    
                    EGPL:egpTextLayout(224,floor(NewFeedPressure):toString(),vec2(25,290),vec2(120,50))
                    EGPL:egpAlign(224,1,1)
                    EGPL:egpSize(224,20)
                    EGPL:egpFont(224,"Arial")

                    EGPL:egpTextLayout(225,(NewBrakeCutIn ? "Cut In" : "Cut Out"),vec2(25+130,290),vec2(120,50))
                    EGPL:egpAlign(225,1,1)
                    EGPL:egpSize(225,20)
                    EGPL:egpFont(225,"Arial")
                
                    EGPL:egpTextLayout(226,(NewIsolatedBraking ? "Lead" : "Trail"),vec2(25+260,290),vec2(120,50))
                    EGPL:egpAlign(226,1,1)
                    EGPL:egpSize(226,20)
                    EGPL:egpFont(226,"Arial")
                }
            break
        }
    break
    case 2,####################################################################################################################################################     Distance Setup
        switch(LPageVar){
            case 0,
                if(clk("buttonclk")){
                    LTopVisible=1
                    stoptimer("buttonclk")
                    EGPL:egpButton(104+3*0,"Modify\nPreset",vec2(192,442),vec2(64,35),vec(245,250,255))
                    switch(DistMode){
                        case 0,
                        EGPL:egpButton(104+3*1,"Distance\nStart",vec2(256,442),vec2(64,35),vec(245,250,255))
                        break
                        case 1,
                        EGPL:egpButton(104+3*1,"Distance\nStop",vec2(256,442),vec2(64,35),vec(245,250,255))
                        break
                        case 2,
                        EGPL:egpButton(104+3*1,"Distance\nReset",vec2(256,442),vec2(64,35),vec(245,250,255))
                        break
                    }
                    EGPL:egpButton(104+3*3,"Exit",vec2(448,442),vec2(64,35),vec(255,245,235))
                    EGPL:egpBoxOutline(200,vec2(256,200),vec2(490,32))
                    EGPL:egpTextLayout(201,"Distance Counter Setup",vec2(11,184),vec2(490,32))
                    EGPL:egpAlign(201,1,1)
                    EGPL:egpSize(201,20)
                    EGPL:egpFont(201,"Arial")
                    
                    EGPL:egpBoxLabeled(202,vec2(45,260),vec2(180,80),"Distance Counter Preset (feet)",vec(255))
                    EGPL:egpBoxLabeled(205,vec2(320,260),vec2(140,80),"Distance Counter Mode",vec(255))
                    
                    EGPL:egpBox(208,vec2(390,286),vec2(128,16))
                    EGPL:egpColor(208,vec(60,80,190))
                    
                    EGPL:egpText(209,"Count Up From Zero",vec2(330,280))
                    EGPL:egpSize(209,12)
                    EGPL:egpFont(209,"Arial")
                    
                    EGPL:egpText(210,"Count Down From Preset",vec2(330,310))
                    EGPL:egpSize(210,12)
                    EGPL:egpFont(210,"Arial")
                    
                    EGPL:egpTextLayout(211,"00000",vec2(45,260),vec2(180,80))
                    EGPL:egpAlign(211,1,1)
                    EGPL:egpSize(211,42)
                    EGPL:egpFont(211,"Arial")
                    
                    EGPL:egpSetText(194,"1200-0")
                    EGPL:egpSetText(195,"Ready")
                    
                    LPageN="1200-0"
                    MessageL="Ready"
                }
                if(chatClk(owner())|clk("buttonclk")){
                    if(LastSaid==".lfb4"){
                        LPage=2
                        LPageVar=1
                    }
                    if(LastSaid==".lfb5"){
                        DistMode++
                    }
                    if(LastSaid==".lfb6"){
                        CountDown=!CountDown
                    }
                    if(LastSaid==".lfb8"){
                        LPage=0
                        LPageVar=0
                    }
                    EGPL:egpSetText(211,DistCountDown:toString())
                    switch(CountDown){
                        case 0,
                        EGPL:egpPos(208,vec2(390,286))
                        EGPL:egpButton(104+3*2,"Count\nDown",vec2(320,442),vec2(64,35),vec(255,245,235))
                        break
                        case 1,
                        EGPL:egpPos(208,vec2(390,316))
                        EGPL:egpButton(104+3*2,"Count\nUp",vec2(320,442),vec2(64,35),vec(255,245,235))
                        break
                    }
                }
            break
            case 1,
                timer("ready",500)
                if(clk("ready")){
                    stoptimer("ready")
                    DistReady=1
                }
                if(clk("buttonclk")){
                    DistDigits=table()
                    LTopVisible=1
                    stoptimer("buttonclk")
                    EGPL:egpButton(104+3*0,"Back\nSpace",vec2(192,442),vec2(64,35),vec(245,250,255))
                    EGPL:egpButton(104+3*2,"Save\nPreset",vec2(384,442),vec2(64,35),vec(245,250,255))
                    EGPL:egpButton(104+3*3,"Cancel",vec2(448,442),vec2(64,35),vec(245,250,255))
                    EGPL:egpBoxOutline(200,vec2(256,200),vec2(490,32))
                    EGPL:egpTextLayout(201,"Distance Counter Setup",vec2(11,184),vec2(490,32))
                    EGPL:egpAlign(201,1,1)
                    EGPL:egpSize(201,20)
                    EGPL:egpFont(201,"Arial")
                    
                    EGPL:egpBoxLabeled(202,vec2(45,260),vec2(180,80),"Distance Counter Preset (feet)",vec(255))
                    EGPL:egpBoxLabeled(205,vec2(320,260),vec2(140,80),"Distance Counter Mode",vec(255))
                    
                    EGPL:egpBox(208,vec2(390,286),vec2(128,16))
                    EGPL:egpColor(208,vec(60,80,190))
                    
                    EGPL:egpText(209,"Count Up From Zero",vec2(330,280))
                    EGPL:egpSize(209,12)
                    EGPL:egpFont(209,"Arial")
                    
                    EGPL:egpText(210,"Count Down From Preset",vec2(330,310))
                    EGPL:egpSize(210,12)
                    EGPL:egpFont(210,"Arial")
                    
                    EGPL:egpBox(211,vec2(96,300),vec2(20,45))
                    EGPL:egpColor(211,vec(36))
                    
                    EGPL:egpTextLayout(212,"00000",vec2(45,260),vec2(180,80))
                    EGPL:egpAlign(212,1,1)
                    EGPL:egpSize(212,42)
                    EGPL:egpFont(212,"Arial")
                    
                    EGPL:egpSetText(194,"1200-1")
                    EGPL:egpSetText(195,"Use Number Keys To Enter New Preset Value, Back Space To Modify\nExisting Value.")
                    
                    LPageN="1200-1"
                    MessageL="Use Number Keys To Enter New Preset Value, Back Space To Modify \nExisting Value."
                }
                if(chatClk(owner())|clk("buttonclk")){
                    if(LastSaid==".lfb4"){
                        timer("ready",100)
                        DistReady=0
                        DistDigits:removeNumber(DistDigits:count())
                    }
                    if(LastSaid==".lfb7"){
                        DistCountDown=(DistDigits[1,number]:toString()+DistDigits[2,number]:toString()+DistDigits[3,number]:toString()+DistDigits[4,number]:toString()+DistDigits[5,number]:toString()):toNumber()
                        LPage=2
                        LPageVar=0
                    }
                    if(LastSaid==".lfb8"){
                        LPage=2
                        LPageVar=0
                        DistReady=0
                    }
                    if(DistDigits:count()<=4&DistReady){
                        if(LastSaid:sub(0,3)==".lb"){
                            InputDigit=LastSaid:sub(4,5)
                            DistDigits:pushNumber(InputDigit:toNumber())
                        }
                    }
                    EGPL:egpSetText(212,DistDigits[1,number]:toString()+DistDigits[2,number]:toString()+DistDigits[3,number]:toString()+DistDigits[4,number]:toString()+DistDigits[5,number]:toString())
                    EGPL:egpPos(211,vec2(96+(DistDigits:count()*19),300))
                    EGPL:egpColor(211,vec(36)*((DistDigits:count())<5))
                }
            break
        }
    break
    case 3,####################################################################################################################################################     Speed Control
        switch(LPageVar){
            case 0,
                if(clk("buttonclk")){
                    LTopVisible=1
                    stoptimer("buttonclk")
                    EGPL:egpButton(104+3*0,"Slow Speed\nOn",vec2(0,442),vec2(64,35),vec(245,250,255))
                    EGPL:egpButton(104+3*1,"Up",vec2(128,442),vec2(64,35),vec(245,250,255))
                    EGPL:egpButton(104+3*2,"Current\nSpeed",vec2(192,442),vec2(64,35),vec(245,250,255))
                    EGPL:egpButton(104+3*3,"Down",vec2(256,442),vec2(64,35),vec(245,250,255))
                    EGPL:egpButton(104+3*4,"Exit",vec2(448,442),vec2(64,35),vec(245,250,255))
                    EGPL:egpButton(104+3*5,"Check\nConsist",vec2(128,477),vec2(64,35),vec(155,205,255))

                    EGPL:egpBoxOutline(200,vec2(256,200+60),vec2(490,32))
                    EGPL:egpTextLayout(201,"Slow Speed Control",vec2(11,184+60),vec2(490,32))
                    EGPL:egpAlign(201,1,1)
                    EGPL:egpSize(201,20)
                    EGPL:egpFont(201,"Arial")
                    
                    EGPL:egpBoxLabeled(202,vec2(180,306),vec2(100,60),"Target Speed",vec(255))
                    EGPL:egpBoxLabeled(205,vec2(290,306),vec2(180,60),"Speed Error",vec(255))
                    
                    EGPL:egpText(208,"Slow Speed",vec2(20,280))
                    EGPL:egpSize(208,18)
                    EGPL:egpFont(208,"Arial")
                    
                    EGPL:egpText(209,"On",vec2(50,296))
                    EGPL:egpSize(209,14)
                    EGPL:egpFont(209,"Arial")
                    
                    EGPL:egpText(210,"Off",vec2(48,336))
                    EGPL:egpSize(210,14)
                    EGPL:egpFont(210,"Arial")
                    
                    EGPL:egpCircle(211,vec2(56,324),vec2(8,8))

                    EGPL:egpBox(212,vec2(12,0),vec2(18,6))
                    EGPL:egpParent(212,211)
                    
                    EGPL:egpTextLayout(213,"0.0",vec2(180,306),vec2(100,60))
                    EGPL:egpAlign(213,1,1)
                    EGPL:egpSize(213,26)
                    EGPL:egpFont(213,"Arial")
                    
                    EGPL:egpBox(214,vec2(290+90,306+45),vec2(180,20))
                    EGPL:egpColor(214,vec(60,80,190))
                    
                    EGPL:egpBoxOutline(215,vec2(290+45,306+45),vec2(90,30))
                    EGPL:egpBoxOutline(216,vec2(290+135,306+45),vec2(90,30))
                    
                    EGPL:egpCircleOutline(217,vec2(56,366),vec2(8,8))
                    EGPL:egpCircle(218,vec2(56,366),vec2(6,6))
                    
                    LPageN="1320-0"
                    MessageL="Slow Speed Control Unavailable, Consist Not Checked"
                }
                if(chatClk(owner())|clk("buttonclk")){
                    if(LastSaid==".lfb1"){
                        SlowSpeedOn=!SlowSpeedOn
                    }
                    if(LastSaid==".lfb3"&SetSlowSpeed<10){
                        SetSlowSpeed+=0.5
                    }
                    if(LastSaid==".lfb4"){
                        SetSlowSpeed=round(RLCPTW["MPH",number],0)
                    }
                    if(LastSaid==".lfb5"&SetSlowSpeed>0){
                        SetSlowSpeed-=0.5
                    }
                    if(LastSaid==".lfb8"){
                        LPage=0
                        LPageVar=0
                    }
                    EGPL:egpAngle(211,-40+SlowSpeedOn*80)
                    EGPL:egpSetText(213,format("%.1f",SetSlowSpeed))
                    EGPL:egpAlpha(218,SlowSpeedOn*255)
                    
                    if(LastSaid==".lb3"){
                        Check=1
                        timer("off",500)
                    }
                }
                if(clk("off")){
                    Check=0
                    stoptimer("off")
                }
                Consist_Output[3,number]=Check
                if(Consist_Data[4,number]){
                    MessageL="Checking Consist..."
                }
                elseif(Consist_Data[5,number]){
                    MessageL="Consist Checked, Slow Speed Control Ready\nLoco Count: "+Consist_Data[2,number]:toString()+"\nTrain Weight: "+Consist_Data[6,number]:toString()
                }
                else{
                    MessageL="Consist Not Checked, Auto Control Unavailable"
                }
                EGPL:egpPos(214,vec2(290+90-clamp((SetSlowSpeed-RLCPTW["MPH",number])*20,-45,45),306+45))
                EGPL:egpSize(214,vec2(abs(clamp(((SetSlowSpeed-RLCPTW["MPH",number])*2)*20,-90,90)),20))
            break
        }
    break
    case 4,####################################################################################################################################################     Trip Optimizer
        switch(LPageVar){
            case 0,
                if(clk("buttonclk")){
                    LTopVisible=1
                    stoptimer("buttonclk")
                    EGPL:egpButton(104+3*0,"Distance\nStart",vec2(0,477),vec2(64,35),vec(155,205,255))
                    EGPL:egpButton(104+3*1,"Check\nConsist",vec2(128,477),vec2(64,35),vec(155,205,255))
                    EGPL:egpButton(104+3*2,"Enter\nSpeed",vec2(192,477),vec2(64,35),vec(155,205,255))
                    EGPL:egpButton(104+3*3,"Auto\nControl",vec2(256,442),vec2(64,35),vec(245,250,255))
                    EGPL:egpButton(104+3*4,"Manual\nControl",vec2(384,442),vec2(64,35),vec(245,250,255))
                    EGPL:egpButton(104+3*5,"Exit",vec2(448,442),vec2(64,35),vec(245,250,255))
                    
                    LPageN="2550-0"
                }
                if(chatClk(owner())|clk("buttonclk")){
                    if(LastSaid==".lfb8"){
                        LPage=0
                        LPageVar=0
                    }
                    if(LastSaid==".lfb5"&Consist_Data[5,number]){
                        TripOptimizerOn=1
                    }
                    if(LastSaid==".lfb7"){
                        TripOptimizerOn=0
                    }
                    if(LastSaid==".lb4"){
                        LPage=4
                        LPageVar=1
                    }
                    if(LastSaid==".lb3"){
                        Check=1
                        timer("off",500)
                    }
                }
                    if(clk("off")){
                        Check=0
                        stoptimer("off")
                    }
                Consist_Output[3,number]=Check
                if(Consist_Data[4,number]){
                    MessageL="Checking Consist..."
                }
                elseif(Consist_Data[5,number]){
                    MessageL="Consist Checked, Auto Control Ready\nLoco Count: "+Consist_Data[2,number]:toString()+"\nTrain Weight: "+Consist_Data[6,number]:toString()
                }
                else{
                    MessageL="Consist Not Checked, Auto Control Unavailable"
                }
            break
            case 1,
                if(clk("buttonclk")){
                    timer("ready",500)
                    TripDigits=table()
                    LTopVisible=1
                    stoptimer("buttonclk")
                    EGPL:egpButton(104+3*0,"Back\nSpace",vec2(192,442),vec2(64,35),vec(245,250,255))
                    EGPL:egpButton(104+3*1,"Save\nPreset",vec2(384,442),vec2(64,35),vec(245,250,255))
                    EGPL:egpButton(104+3*2,"Cancel",vec2(448,442),vec2(64,35),vec(245,250,255))
                    
                    EGPL:egpBox(200,vec2(0,0),vec2(8,16))
                    
                    LPageN="2550-1"
                }
                MessageL="Use Number Keys To Enter New Preset Value, Back Space To Modify \nExisting Value.\nSet Speed: "+TripDigits[1,number]:toString()+TripDigits[2,number]:toString()
                if(clk("ready")){
                    stoptimer("ready")
                    TripReady=1
                }
                if(chatClk(owner())|clk("buttonclk")){
                    if(LastSaid==".lfb4"){
                        timer("ready",100)
                        TripReady=0
                        TripDigits:removeNumber(TripDigits:count())
                    }
                    if(LastSaid==".lfb7"){
                        TripOptimizerSpeed=(TripDigits[1,number]:toString()+TripDigits[2,number]:toString()):toNumber()
                        LPage=4
                        LPageVar=0
                    }
                    if(LastSaid==".lfb8"){
                        LPage=4
                        LPageVar=0
                        TripReady=0
                    }
                    if(TripDigits:count()<=1&TripReady&(LastSaid:sub(0,3)==".lb")){
                        InputDigit=LastSaid:sub(4,5)
                        TripDigits:pushNumber(InputDigit:toNumber())
                    }
                    EGPL:egpPos(200,vec2(79+(TripDigits:count()*7),430))
                    EGPL:egpColor(200,vec(36)*((TripDigits:count())<2))
                }
            break
        }
    break
}

####################################################################################################################################################                Right Display
switch(RPage){
    case 0,####################################################################################################################################################     Main Page
        switch(RPageVar){
            case 0,
                RTopVisible=1
                if(clk("buttonclk")){
                    stoptimer("buttonclk")
                    EGPR:egpButton(104+3*0,"Air\nBrake",vec2(0,442),vec2(64,35),vec(245,250,255))
                    switch(DistMode){
                        case 0,
                        EGPR:egpButton(104+3*1,"Distance\nStart",vec2(0,477),vec2(64,35),vec(155,205,255))
                        break
                        case 1,
                        EGPR:egpButton(104+3*1,"Distance\nStop",vec2(0,477),vec2(64,35),vec(155,205,255))
                        break
                        case 2,
                        EGPR:egpButton(104+3*1,"Distance\nReset",vec2(0,477),vec2(64,35),vec(155,205,255))
                        break
                    }
                    EGPR:egpButton(104+3*2,"Distance\nSetup",vec2(64,477),vec2(64,35),vec(155,205,255))
                    EGPR:egpButton(104+3*3,"More\nMenu",vec2(448,477),vec2(64,35),vec(155,205,255))
                    EGPR:egpButton(104+3*4,"Speed\nControl",vec2(320,442),vec2(64,35),vec(245,250,255))
                    EGPR:egpButton(104+3*5,"Trip\nOptimizer",vec2(256,477),vec2(64,35),vec(155,205,255))
                    
                    
                    EGPR:egpBoxLabeled(200,vec2(10,200),vec2(100,30),"Rail Cleaner",vec(255))
                    EGPR:egpBoxLabeled(203,vec2(10,255),vec2(100,80),"EOT",vec(255))
                    EGPR:egpBoxLabeled(206,vec2(10,356),vec2(50,34),"Ind Brk",vec(255))
                    EGPR:egpBoxLabeled(209,vec2(10+50,356),vec2(50,34),"Auto Brk",vec(255))
                    EGPR:egpBoxLabeled(212,vec2(402,356),vec2(100,34),"Fuel",vec(255))
 
                    EGPR:egpText(215,"0 Gal",vec2(462,370))
                    EGPR:egpFont(215,"Arial")
                    EGPR:egpSize(215,10)
                    
                    EGPR:egpBox(216,vec2(432,380),vec2(30,2))

                    EGPR:egpBox(217,vec2(432,375),vec2(30,10))
                    EGPR:egpColor(217,vec(60,80,190))
                    
                    EGPR:egpBox(218,vec2(432-16.5,375),vec2(4,10))
                    EGPR:egpColor(218,vec(0))
                    
                    EGPR:egpBox(219,vec2(432+16.5,375),vec2(4,10))
                    EGPR:egpColor(219,vec(0))
                    
                    EGPR:egpText(220,"E",vec2(406,370))
                    EGPR:egpFont(220,"Arial")
                    EGPR:egpSize(220,10)
                    
                    EGPR:egpText(221,"F",vec2(451,370))
                    EGPR:egpFont(221,"Arial")
                    EGPR:egpSize(221,10)
                    
                    EGPR:egpTextLayout(222,"Off",vec2(10,200),vec2(100,30))
                    EGPR:egpFont(222,"Arial")
                    EGPR:egpSize(222,12)
                    EGPR:egpAlign(222,1,1)
                    
                    EGPR:egpTextLayout(223,"ID Code: 00000",vec2(10,262),vec2(100,30))
                    EGPR:egpFont(223,"Arial")
                    EGPR:egpSize(223,12)
                    EGPR:egpAlign(223,1,1)
                    
                    EGPR:egpTextLayout(224,"Marker: Off",vec2(10,262+19),vec2(100,30))
                    EGPR:egpFont(224,"Arial")
                    EGPR:egpSize(224,12)
                    EGPR:egpAlign(224,1,1)
                    
                    EGPR:egpTextLayout(225,"EM: Disabled",vec2(10,262+38),vec2(100,30))
                    EGPR:egpFont(225,"Arial")
                    EGPR:egpSize(225,12)
                    EGPR:egpAlign(225,1,1)
                    
                    EGPR:egpTextLayout(226,"Lead",vec2(10,356),vec2(50,34))
                    EGPR:egpFont(226,"Arial")
                    EGPR:egpSize(226,12)
                    EGPR:egpAlign(226,1,1)
                    
                    EGPR:egpTextLayout(227,"Cut-In",vec2(10+50,356),vec2(50,34))
                    EGPR:egpFont(227,"Arial")
                    EGPR:egpSize(227,12)
                    EGPR:egpAlign(227,1,1)
                    
                    EGPR:egpSetText(194,"0000-0")
                    EGPR:egpSetText(195,"Ready")
                    RPageN="0000-0"
                }
                if(TripOptimizerOn){
                    MessageR="Auto Control Engaged\nSet Speed: "+TripOptimizerSpeed:toString()+" Mph"
                }
                else{
                    MessageR="Ready"
                }
                if(changed(LastSaid)&LastSaid==".rb8"){
                    RPageVar=1
                }
                if(changed(LastSaid)&LastSaid==".rb1"){
                    DistMode++
                }
                if(DistMode>2){
                    DistMode=0
                }
                if(changed(LastSaid)&LastSaid==".rfb1"){
                    RPage=1
                    RPageVar=0
                }
                if(changed(LastSaid)&LastSaid==".rb2"){
                    RPage=2
                    RPageVar=0
                }
                if(changed(LastSaid)&LastSaid==".rfb6"){
                    RPage=3
                    RPageVar=0
                }
                if(changed(LastSaid)&LastSaid==".rb5"){
                    RPage=4
                    RPageVar=0
                }
                EGPR:egpSetText(215,ceil(FuelLevel):toString()+" Gal")
                
                EGPR:egpPos(217,vec2(417+(FuelLevel/320)/(FuelCap/5000),375))
                EGPR:egpSize(217,vec2((FuelLevel/160)/(FuelCap/5000),10))
                
                EGPR:egpSetText(226,IsolatedBraking ? "Lead" : "Trail")
                EGPR:egpSetText(227,BrakeCutIn ? "Cut-In" : "Cut-Out")
            break
            case 1,
                RTopVisible=1
                if(clk("buttonclk")){
                    stoptimer("buttonclk")
                    EGPR:egpButton(104+3*0,"Exit",vec2(448,442),vec2(64,35),vec(255,245,235))
                    EGPR:egpSetText(194,"0000-1")
                    EGPR:egpSetText(195,"Ready")
                    RPageN="0000-1"
                    MessageR="Ready"
                }
                if(LastSaid==".rfb8"){
                    RPageVar=0
                }
            break
        }
    break
    case 1,####################################################################################################################################################     Airbrake Setup
        switch (RPageVar){
            case 0,
                RTopVisible=1
                if(clk("buttonclk")){
                    stoptimer("buttonclk")
                    EGPR:egpButton(104+3*0,"Change Setup",vec2(128,442),vec2(64,35),vec(245,250,255))
                    EGPR:egpButton(104+3*1,"Exit",vec2(448,442),vec2(64,35),vec(245,250,255))
                    EGPR:egpBoxOutline(200,vec2(256,200),vec2(490,32))
                    EGPR:egpTextLayout(201,"Electronic Air Brake Setup",vec2(11,184),vec2(490,32))
                    EGPR:egpAlign(201,1,1)
                    EGPR:egpSize(201,20)
                    EGPR:egpFont(201,"Arial")
                    EGPR:egpBoxLabeled(202,vec2(25,230),vec2(120,50),"Feed Valve Setting",vec(255))
                    EGPR:egpBoxLabeled(205,vec2(25+130,230),vec2(120,50),"Automatic Brake",vec(255))
                    EGPR:egpBoxLabeled(208,vec2(25+260,230),vec2(120,50),"Independent Brake",vec(255))
                    EGPR:egpTextLayout(211,"Current\nSetup",vec2(408,230),vec2(100,50))
                    EGPR:egpAlign(211,1,1)
                    EGPR:egpSize(211,20)
                    EGPR:egpFont(211,"Arial")
                    EGPR:egpSetText(194,"2000-0")
                    EGPR:egpSetText(195,"Ready")
                    RPageN="2000-0"
                    MessageR="Ready"
                }
                if(changed(LastSaid)&LastSaid==".rfb3"){
                    RPage=1
                    RPageVar=1
                }
                if(changed(LastSaid)&LastSaid==".rfb8"){
                    RPage=0
                    RPageVar=0
                }
                if(chatClk(owner())|clk("buttonclk")){
                    EGPR:egpTextLayout(212,floor(FeedPressure):toString(),vec2(25,230),vec2(120,50))
                    EGPR:egpAlign(212,1,1)
                    EGPR:egpSize(212,20)
                    EGPR:egpFont(212,"Arial")

                    EGPR:egpTextLayout(213,(BrakeCutIn ? "Cut In" : "Cut Out"),vec2(25+130,230),vec2(120,50))
                    EGPR:egpAlign(213,1,1)
                    EGPR:egpSize(213,20)
                    EGPR:egpFont(213,"Arial")
                
                    EGPR:egpTextLayout(214,(IsolatedBraking ? "Lead" : "Trail"),vec2(25+260,230),vec2(120,50))
                    EGPR:egpAlign(214,1,1)
                    EGPR:egpSize(214,20)
                    EGPR:egpFont(214,"Arial")
                }
            break
            case 1,
                RTopVisible=1
                if(clk("buttonclk")){
                    stoptimer("buttonclk")
                    EGPR:egpButton(104+3*0,"Increase",vec2(0,442),vec2(64,35),vec(245,250,255))
                    EGPR:egpButton(104+3*1,"Decrease",vec2(64,442),vec2(64,35),vec(245,250,255))
                    EGPR:egpButton(104+3*2,"Cut In/Out",vec2(128,442),vec2(64,35),vec(245,250,255))
                    EGPR:egpButton(104+3*3,"Lead/Trail",vec2(192,442),vec2(64,35),vec(245,250,255))
                    EGPR:egpButton(104+3*4,"Save Changes",vec2(320,442),vec2(64,35),vec(245,250,255))
                    EGPR:egpButton(104+3*5,"Exit",vec2(448,442),vec2(64,35),vec(245,250,255))
                    
                    EGPR:egpBoxOutline(200,vec2(256,200),vec2(490,32))
                    EGPR:egpTextLayout(201,"Electronic Air Brake Setup",vec2(11,184),vec2(490,32))
                    EGPR:egpAlign(201,1,1)
                    EGPR:egpSize(201,20)
                    EGPR:egpFont(201,"Arial")
                    EGPR:egpBoxLabeled(202,vec2(25,230),vec2(120,50),"Feed Valve Setting",vec(255))
                    EGPR:egpBoxLabeled(205,vec2(25+130,230),vec2(120,50),"Automatic Brake",vec(255))
                    EGPR:egpBoxLabeled(208,vec2(25+260,230),vec2(120,50),"Independent Brake",vec(255))
                    EGPR:egpTextLayout(211,"Current\nSetup",vec2(408,230),vec2(100,50))
                    EGPR:egpAlign(211,1,1)
                    EGPR:egpSize(211,20)
                    EGPR:egpFont(211,"Arial")
                    
                    EGPR:egpBoxLabeled(215,vec2(25,290),vec2(120,50),"Feed Valve Setting",vec(255))
                    EGPR:egpBoxLabeled(218,vec2(25+130,290),vec2(120,50),"Automatic Brake",vec(255))
                    EGPR:egpBoxLabeled(221,vec2(25+260,290),vec2(120,50),"Independent Brake",vec(255))
                    
                    EGPR:egpTextLayout(227,"New\nSetup",vec2(408,290),vec2(100,50))
                    EGPR:egpAlign(227,1,1)
                    EGPR:egpSize(227,20)
                    EGPR:egpFont(227,"Arial")
                    
                    EGPR:egpSetText(194,"2000-1")
                    EGPR:egpSetText(195,"Ready")
                    RPageN="2000-1"
                    MessageR="Ready"
                }
                if(LastSaid==".rfb8"){
                    RPage=0
                    RPageVar=0
                }
                if(LastSaid==".rfb1"&NewFeedPressure<110){
                    NewFeedPressure+=5
                }
                if(LastSaid==".rfb2"&NewFeedPressure>80){
                    NewFeedPressure-=5
                }
                if(LastSaid==".rfb3"){
                    NewBrakeCutIn=!NewBrakeCutIn
                }
                if(LastSaid==".rfb4"){
                    NewIsolatedBraking=!NewIsolatedBraking
                }
                if(LastSaid==".rfb6"){
                    FeedPressure=NewFeedPressure
                    BrakeCutIn=NewBrakeCutIn
                    IsolatedBraking=NewIsolatedBraking
                }
                if(chatClk(owner())|clk("buttonclk")){
                    EGPR:egpTextLayout(212,floor(FeedPressure):toString(),vec2(25,230),vec2(120,50))
                    EGPR:egpAlign(212,1,1)
                    EGPR:egpSize(212,20)
                    EGPR:egpFont(212,"Arial")

                    EGPR:egpTextLayout(213,(BrakeCutIn ? "Cut In" : "Cut Out"),vec2(25+130,230),vec2(120,50))
                    EGPR:egpAlign(213,1,1)
                    EGPR:egpSize(213,20)
                    EGPR:egpFont(213,"Arial")
                
                    EGPR:egpTextLayout(214,(IsolatedBraking ? "Lead" : "Trail"),vec2(25+260,230),vec2(120,50))
                    EGPR:egpAlign(214,1,1)
                    EGPR:egpSize(214,20)
                    EGPR:egpFont(214,"Arial")
                    
                    EGPR:egpTextLayout(224,floor(NewFeedPressure):toString(),vec2(25,290),vec2(120,50))
                    EGPR:egpAlign(224,1,1)
                    EGPR:egpSize(224,20)
                    EGPR:egpFont(224,"Arial")

                    EGPR:egpTextLayout(225,(NewBrakeCutIn ? "Cut In" : "Cut Out"),vec2(25+130,290),vec2(120,50))
                    EGPR:egpAlign(225,1,1)
                    EGPR:egpSize(225,20)
                    EGPR:egpFont(225,"Arial")
                
                    EGPR:egpTextLayout(226,(NewIsolatedBraking ? "Lead" : "Trail"),vec2(25+260,290),vec2(120,50))
                    EGPR:egpAlign(226,1,1)
                    EGPR:egpSize(226,20)
                    EGPR:egpFont(226,"Arial")
                }
            break
        }
    break
    case 2,####################################################################################################################################################     Distance Setup
        switch(RPageVar){
            case 0,
                if(clk("buttonclk")){
                    RTopVisible=1
                    stoptimer("buttonclk")
                    EGPR:egpButton(104+3*0,"Modify\nPreset",vec2(192,442),vec2(64,35),vec(245,250,255))
                    switch(DistMode){
                        case 0,
                        EGPR:egpButton(104+3*1,"Distance\nStart",vec2(256,442),vec2(64,35),vec(245,250,255))
                        break
                        case 1,
                        EGPR:egpButton(104+3*1,"Distance\nStop",vec2(256,442),vec2(64,35),vec(245,250,255))
                        break
                        case 2,
                        EGPR:egpButton(104+3*1,"Distance\nReset",vec2(256,442),vec2(64,35),vec(245,250,255))
                        break
                    }
                    EGPR:egpButton(104+3*3,"Exit",vec2(448,442),vec2(64,35),vec(255,245,235))
                    EGPR:egpBoxOutline(200,vec2(256,200),vec2(490,32))
                    EGPR:egpTextLayout(201,"Distance Counter Setup",vec2(11,184),vec2(490,32))
                    EGPR:egpAlign(201,1,1)
                    EGPR:egpSize(201,20)
                    EGPR:egpFont(201,"Arial")
                    
                    EGPR:egpBoxLabeled(202,vec2(45,260),vec2(180,80),"Distance Counter Preset (feet)",vec(255))
                    EGPR:egpBoxLabeled(205,vec2(320,260),vec2(140,80),"Distance Counter Mode",vec(255))
                    
                    EGPR:egpBox(208,vec2(390,286),vec2(128,16))
                    EGPR:egpColor(208,vec(60,80,190))
                    
                    EGPR:egpText(209,"Count Up From Zero",vec2(330,280))
                    EGPR:egpSize(209,12)
                    EGPR:egpFont(209,"Arial")
                    
                    EGPR:egpText(210,"Count Down From Preset",vec2(330,310))
                    EGPR:egpSize(210,12)
                    EGPR:egpFont(210,"Arial")
                    
                    EGPR:egpTextLayout(211,"00000",vec2(45,260),vec2(180,80))
                    EGPR:egpAlign(211,1,1)
                    EGPR:egpSize(211,42)
                    EGPR:egpFont(211,"Arial")
                    
                    EGPR:egpSetText(194,"1200-0")
                    EGPR:egpSetText(195,"Ready")
                    
                    RPageN="1200-0"
                    MessageR="Ready"
                }
                if(chatClk(owner())|clk("buttonclk")){
                    if(LastSaid==".rfb4"){
                        RPage=2
                        RPageVar=1
                    }
                    if(LastSaid==".rfb5"){
                        DistMode++
                    }
                    if(LastSaid==".rfb6"){
                        CountDown=!CountDown
                    }
                    if(LastSaid==".rfb8"){
                        RPage=0
                        RPageVar=0
                    }
                    EGPR:egpSetText(211,DistCountDown:toString())
                    switch(CountDown){
                        case 0,
                        EGPR:egpPos(208,vec2(390,286))
                        EGPR:egpButton(104+3*2,"Count\nDown",vec2(320,442),vec2(64,35),vec(255,245,235))
                        break
                        case 1,
                        EGPR:egpPos(208,vec2(390,316))
                        EGPR:egpButton(104+3*2,"Count\nUp",vec2(320,442),vec2(64,35),vec(255,245,235))
                        break
                    }
                }
            break
            case 1,
                timer("ready",500)
                if(clk("ready")){
                    stoptimer("ready")
                    DistReady=1
                }
                if(clk("buttonclk")){
                    DistDigits=table()
                    RTopVisible=1
                    stoptimer("buttonclk")
                    EGPR:egpButton(104+3*0,"Back\nSpace",vec2(192,442),vec2(64,35),vec(245,250,255))
                    EGPR:egpButton(104+3*2,"Save\nPreset",vec2(384,442),vec2(64,35),vec(245,250,255))
                    EGPR:egpButton(104+3*3,"Cancel",vec2(448,442),vec2(64,35),vec(245,250,255))
                    EGPR:egpBoxOutline(200,vec2(256,200),vec2(490,32))
                    EGPR:egpTextLayout(201,"Distance Counter Setup",vec2(11,184),vec2(490,32))
                    EGPR:egpAlign(201,1,1)
                    EGPR:egpSize(201,20)
                    EGPR:egpFont(201,"Arial")
                    
                    EGPR:egpBoxLabeled(202,vec2(45,260),vec2(180,80),"Distance Counter Preset (feet)",vec(255))
                    EGPR:egpBoxLabeled(205,vec2(320,260),vec2(140,80),"Distance Counter Mode",vec(255))
                    
                    EGPR:egpBox(208,vec2(390,286),vec2(128,16))
                    EGPR:egpColor(208,vec(60,80,190))
                    
                    EGPR:egpText(209,"Count Up From Zero",vec2(330,280))
                    EGPR:egpSize(209,12)
                    EGPR:egpFont(209,"Arial")
                    
                    EGPR:egpText(210,"Count Down From Preset",vec2(330,310))
                    EGPR:egpSize(210,12)
                    EGPR:egpFont(210,"Arial")
                    
                    EGPR:egpBox(211,vec2(96,300),vec2(20,45))
                    EGPR:egpColor(211,vec(36))
                    
                    EGPR:egpTextLayout(212,"00000",vec2(45,260),vec2(180,80))
                    EGPR:egpAlign(212,1,1)
                    EGPR:egpSize(212,42)
                    EGPR:egpFont(212,"Arial")
                    
                    EGPR:egpSetText(194,"1200-1")
                    EGPR:egpSetText(195,"Use Number Keys To Enter New Preset Value, Back Space To Modify\nExisting Value.")
                    
                    RPageN="1200-1"
                    MessageR="Use Number Keys To Enter New Preset Value, Back Space To Modify \nExisting Value."
                }
                if(chatClk(owner())|clk("buttonclk")){
                    if(LastSaid==".rfb4"){
                        timer("ready",100)
                        DistReady=0
                        DistDigits:removeNumber(DistDigits:count())
                    }
                    if(LastSaid==".rfb7"){
                        DistCountDown=(DistDigits[1,number]:toString()+DistDigits[2,number]:toString()+DistDigits[3,number]:toString()+DistDigits[4,number]:toString()+DistDigits[5,number]:toString()):toNumber()
                        RPage=2
                        RPageVar=0
                    }
                    if(LastSaid==".rfb8"){
                        RPage=2
                        RPageVar=0
                        DistReady=0
                    }
                    if(DistDigits:count()<=4&DistReady){
                        if(LastSaid:sub(0,3)==".rb"){
                            InputDigit=LastSaid:sub(4,5)
                            DistDigits:pushNumber(InputDigit:toNumber())
                        }
                    }
                    EGPR:egpSetText(212,DistDigits[1,number]:toString()+DistDigits[2,number]:toString()+DistDigits[3,number]:toString()+DistDigits[4,number]:toString()+DistDigits[5,number]:toString())
                    EGPR:egpPos(211,vec2(96+(DistDigits:count()*19),300))
                    EGPR:egpColor(211,vec(36)*((DistDigits:count())<5))
                }
            break
        }
    break
    case 3,####################################################################################################################################################     Speed Control
        switch(RPageVar){
            case 0,
                if(clk("buttonclk")){
                    RTopVisible=1
                    stoptimer("buttonclk")
                    EGPR:egpButton(104+3*0,"Slow Speed\nOn",vec2(0,442),vec2(64,35),vec(245,250,255))
                    EGPR:egpButton(104+3*1,"Up",vec2(128,442),vec2(64,35),vec(245,250,255))
                    EGPR:egpButton(104+3*2,"Current\nSpeed",vec2(192,442),vec2(64,35),vec(245,250,255))
                    EGPR:egpButton(104+3*3,"Down",vec2(256,442),vec2(64,35),vec(245,250,255))
                    EGPR:egpButton(104+3*4,"Exit",vec2(448,442),vec2(64,35),vec(245,250,255))
                    EGPR:egpButton(104+3*5,"Check\nConsist",vec2(128,477),vec2(64,35),vec(155,205,255))

                    EGPR:egpBoxOutline(200,vec2(256,200+60),vec2(490,32))
                    EGPR:egpTextLayout(201,"Slow Speed Control",vec2(11,184+60),vec2(490,32))
                    EGPR:egpAlign(201,1,1)
                    EGPR:egpSize(201,20)
                    EGPR:egpFont(201,"Arial")
                    
                    EGPR:egpBoxLabeled(202,vec2(180,306),vec2(100,60),"Target Speed",vec(255))
                    EGPR:egpBoxLabeled(205,vec2(290,306),vec2(180,60),"Speed Error",vec(255))
                    
                    EGPR:egpText(208,"Slow Speed",vec2(20,280))
                    EGPR:egpSize(208,18)
                    EGPR:egpFont(208,"Arial")
                    
                    EGPR:egpText(209,"On",vec2(50,296))
                    EGPR:egpSize(209,14)
                    EGPR:egpFont(209,"Arial")
                    
                    EGPR:egpText(210,"Off",vec2(48,336))
                    EGPR:egpSize(210,14)
                    EGPR:egpFont(210,"Arial")
                    
                    EGPR:egpCircle(211,vec2(56,324),vec2(8,8))

                    EGPR:egpBox(212,vec2(12,0),vec2(18,6))
                    EGPR:egpParent(212,211)
                    
                    EGPR:egpTextLayout(213,"0.0",vec2(180,306),vec2(100,60))
                    EGPR:egpAlign(213,1,1)
                    EGPR:egpSize(213,26)
                    EGPR:egpFont(213,"Arial")
                    
                    EGPR:egpBox(214,vec2(290+90,306+45),vec2(180,20))
                    EGPR:egpColor(214,vec(60,80,190))
                    
                    EGPR:egpBoxOutline(215,vec2(290+45,306+45),vec2(90,30))
                    EGPR:egpBoxOutline(216,vec2(290+135,306+45),vec2(90,30))
                    
                    EGPR:egpCircleOutline(217,vec2(56,366),vec2(8,8))
                    EGPR:egpCircle(218,vec2(56,366),vec2(6,6))
                    
                    RPageN="1320-0"
                    MessageR="Slow Speed Control Unavailable, Consist Not Checked"
                }
                if(chatClk(owner())|clk("buttonclk")){
                    if(LastSaid==".rfb1"){
                        SlowSpeedOn=!SlowSpeedOn
                    }
                    if(LastSaid==".rfb3"&SetSlowSpeed<10){
                        SetSlowSpeed+=0.5
                    }
                    if(LastSaid==".rfb4"){
                        SetSlowSpeed=round(RLCPTW["MPH",number],0)
                    }
                    if(LastSaid==".rfb5"&SetSlowSpeed>0){
                        SetSlowSpeed-=0.5
                    }
                    if(LastSaid==".rfb8"){
                        RPage=0
                        RPageVar=0
                    }
                    EGPR:egpAngle(211,-40+SlowSpeedOn*80)
                    EGPR:egpSetText(213,format("%.1f",SetSlowSpeed))
                    EGPR:egpAlpha(218,SlowSpeedOn*255)
                    
                    if(LastSaid==".rb3"){
                        Check=1
                        timer("off",500)
                    }
                }
                if(clk("off")){
                    Check=0
                    stoptimer("off")
                }
                Consist_Output[3,number]=Check
                if(Consist_Data[4,number]){
                    MessageR="Checking Consist..."
                }
                elseif(Consist_Data[5,number]){
                    MessageR="Consist Checked, Slow Speed Control Ready\nLoco Count: "+Consist_Data[2,number]:toString()+"\nTrain Weight: "+Consist_Data[6,number]:toString()
                }
                else{
                    MessageR="Consist Not Checked, Auto Control Unavailable"
                }
                EGPR:egpPos(214,vec2(290+90-clamp((SetSlowSpeed-RLCPTW["MPH",number])*20,-45,45),306+45))
                EGPR:egpSize(214,vec2(abs(clamp(((SetSlowSpeed-RLCPTW["MPH",number])*2)*20,-90,90)),20))
            break
        }
    break
    case 4,####################################################################################################################################################     Trip Optimizer
        switch(RPageVar){
            case 0,
                if(clk("buttonclk")){
                    RTopVisible=1
                    stoptimer("buttonclk")
                    EGPR:egpButton(104+3*0,"Distance\nStart",vec2(0,477),vec2(64,35),vec(155,205,255))
                    EGPR:egpButton(104+3*1,"Check\nConsist",vec2(128,477),vec2(64,35),vec(155,205,255))
                    EGPR:egpButton(104+3*2,"Enter\nSpeed",vec2(192,477),vec2(64,35),vec(155,205,255))
                    EGPR:egpButton(104+3*3,"Auto\nControl",vec2(256,442),vec2(64,35),vec(245,250,255))
                    EGPR:egpButton(104+3*4,"Manual\nControl",vec2(384,442),vec2(64,35),vec(245,250,255))
                    EGPR:egpButton(104+3*5,"Exit",vec2(448,442),vec2(64,35),vec(245,250,255))
                    
                    RPageN="2550-0"
                }
                if(chatClk(owner())|clk("buttonclk")){
                    if(LastSaid==".rfb8"){
                        RPage=0
                        RPageVar=0
                    }
                    if(LastSaid==".rfb5"&Consist_Data[5,number]){
                        TripOptimizerOn=1
                    }
                    if(LastSaid==".rfb7"){
                        TripOptimizerOn=0
                    }
                    if(LastSaid==".rb4"){
                        RPage=4
                        RPageVar=1
                    }
                    if(LastSaid==".rb3"){
                        Check=1
                        timer("off",500)
                    }
                }
                    if(clk("off")){
                        Check=0
                        stoptimer("off")
                    }
                Consist_Output[3,number]=Check
                if(Consist_Data[4,number]){
                    MessageR="Checking Consist..."
                }
                elseif(Consist_Data[5,number]){
                    MessageR="Consist Checked, Auto Control Ready\nLoco Count: "+Consist_Data[2,number]:toString()+"\nTrain Weight: "+Consist_Data[6,number]:toString()
                }
                else{
                    MessageR="Consist Not Checked, Auto Control Unavailable"
                }
            break
            case 1,
                if(clk("buttonclk")){
                    timer("ready",500)
                    TripDigits=table()
                    RTopVisible=1
                    stoptimer("buttonclk")
                    EGPR:egpButton(104+3*0,"Back\nSpace",vec2(192,442),vec2(64,35),vec(245,250,255))
                    EGPR:egpButton(104+3*1,"Save\nPreset",vec2(384,442),vec2(64,35),vec(245,250,255))
                    EGPR:egpButton(104+3*2,"Cancel",vec2(448,442),vec2(64,35),vec(245,250,255))
                    
                    EGPR:egpBox(200,vec2(0,0),vec2(8,16))
                    
                    RPageN="2550-1"
                }
                MessageR="Use Number Keys To Enter New Preset Value, Back Space To Modify \nExisting Value.\nSet Speed: "+TripDigits[1,number]:toString()+TripDigits[2,number]:toString()
                if(clk("ready")){
                    stoptimer("ready")
                    TripReady=1
                }
                if(chatClk(owner())|clk("buttonclk")){
                    if(LastSaid==".rfb4"){
                        timer("ready",100)
                        TripReady=0
                        TripDigits:removeNumber(TripDigits:count())
                    }
                    if(LastSaid==".rfb7"){
                        TripOptimizerSpeed=(TripDigits[1,number]:toString()+TripDigits[2,number]:toString()):toNumber()
                        RPage=4
                        RPageVar=0
                    }
                    if(LastSaid==".rfb8"){
                        RPage=4
                        RPageVar=0
                        TripReady=0
                    }
                    if(TripDigits:count()<=1&TripReady&(LastSaid:sub(0,3)==".rb")){
                        InputDigit=LastSaid:sub(4,5)
                        TripDigits:pushNumber(InputDigit:toNumber())
                    }
                    EGPR:egpPos(200,vec2(79+(TripDigits:count()*7),430))
                    EGPR:egpColor(200,vec(36)*((TripDigits:count())<2))
                }
            break
        }
    break
}
}
if(clk("clk")&On){
    if((changed(LPage)|changed(LPageVar)|changed(RPage)|changed(RPageVar)|changed(DistMode))&Active){
        timer("buttonclk",100)
    }
    if((chatClk(owner())|changed(LPage)|changed(LPageVar)|clk("buttonclk"))&LTopVisible){
        EGPL:egpTopUpdate()
    }
    if((chatClk(owner())|changed(RPage)|changed(RPageVar)|clk("buttonclk"))&RTopVisible){
        EGPR:egpTopUpdate()
    }
}
if(clk("buttonclk")|chatClk(owner())){
    EGPL:egpBox(300,vec2(256),vec2(512))
    EGPL:egpColor(300,vec4(0,0,0,40+!On*255))

    EGPR:egpBox(300,vec2(256),vec2(512))
    EGPR:egpColor(300,vec4(0,0,0,40+!On*255))
}
if(~On){
    reset()
}

