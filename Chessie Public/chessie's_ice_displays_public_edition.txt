@name Chessie's ICE Displays Public Edition
@inputs EGP:wirelink LEGP:wirelink RLCPT:entity EOTD:array Num:string Driver:entity Bell On CabSignal MU_Master Acceleration
@outputs MPHS:string GenField LeadBraking BrakeCutIn EQRes_Set
@persist ButtonMenu MButtonMenu TrainLength:string Digit1 Digit2 Digit3 Digit4 Digit5 Confirm FTCount FTCountOn PossibleLead PossibleCutIn PossibleEQRes_Set PossibleEQRes_Set2
@trigger On
EGPE=EGP:entity()
LEGPE=LEGP:entity()
if(first()|dupefinished()){
    PossibleEQRes_Set=90
    PossibleEQRes_Set2=100
}
if(first()|dupefinished()|~EGP|~LEGP){
    Digit1=0
    Digit2=0
    Digit3=0
    Digit4=0
    Digit5=0
    ButtonMenu=0
    MButtonMenu=0
    EQRes_Set=90
    setName("Chessie's ICE Displays \nPublic Edition")
    entity():setBodygroup(1,1)
    A=1
    holoCreate(A)
    holoPos(A,EGPE:toWorld(vec(5.3,0,0)))
    holoAng(A,EGPE:toWorld(ang(90,0,0)))
    holoParent(A,EGPE)
    holoModel(A,"plane")
    holoMaterial(A,"cubics_pack/ice/ice_operation")
    holoScale(A,vec(0.55,1.05,1))
    holoDisableShading(A,1)
    
    A=2
    holoCreate(A)
    holoPos(A,EGPE:toWorld(vec(5.3,0,0)))
    holoAng(A,EGPE:toWorld(ang(90,0,0)))
    holoParent(A,EGPE)
    holoModel(A,"plane")
    holoScale(A,vec(0.55,1.05,1))
    holoDisableShading(A,1)
    
    A=3
    holoCreate(A)
    holoPos(A,EGPE:toWorld(vec(5.3,0,0)))
    holoAng(A,EGPE:toWorld(ang(90,0,0)))
    holoParent(A,EGPE)
    holoModel(A,"plane")
    holoScale(A,vec(0.55,1.05,1))
    holoDisableShading(A,1)

    A=4
    holoCreate(A)
    holoPos(A,EGPE:toWorld(vec(5.3,0,0)))
    holoAng(A,EGPE:toWorld(ang(90,0,0)))
    holoParent(A,EGPE)
    holoModel(A,"plane")
    holoScale(A,vec(0.55,1.05,1))
    holoMaterial(A,"cubics_pack/ice/ice_wheel_slip")
    holoDisableShading(A,1)
    
    A=5
    holoCreate(A)
    holoPos(A,EGPE:toWorld(vec(5.3,0,0)))
    holoAng(A,EGPE:toWorld(ang(90,0,0)))
    holoParent(A,EGPE)
    holoModel(A,"plane")
    holoScale(A,vec(0.55,1.05,1))
    holoMaterial(A,"cubics_pack/ice/ice_pcs_open")
    holoDisableShading(A,1)
    
    A=6
    holoCreate(A)
    holoPos(A,EGPE:toWorld(vec(5.3,0,0)))
    holoAng(A,EGPE:toWorld(ang(90,0,0)))
    holoParent(A,EGPE)
    holoModel(A,"plane")
    holoScale(A,vec(0.55,1.05,1))
    holoMaterial(A,"cubics_pack/ice/ice_sand")
    holoDisableShading(A,1)
    
    A=7
    holoCreate(A)
    holoPos(A,EGPE:toWorld(vec(5.3,0,0)))
    holoAng(A,EGPE:toWorld(ang(90,0,0)))
    holoParent(A,EGPE)
    holoModel(A,"plane")
    holoScale(A,vec(0.55,1.05,1))
    holoMaterial(A,"cubics_pack/ice/ice_brake_warn")
    holoDisableShading(A,1)
    
    A=8
    holoCreate(A)
    holoPos(A,EGPE:toWorld(vec(5.3,0,0)))
    holoAng(A,EGPE:toWorld(ang(90,0,0)))
    holoParent(A,EGPE)
    holoModel(A,"plane")
    holoScale(A,vec(0.55,1.05,1))
    holoMaterial(A,"cubics_pack/ice/ice_bell_on")
    holoDisableShading(A,1)

    A=9
    holoCreate(A)
    holoPos(A,EGPE:toWorld(vec(5.3,0,0)))
    holoAng(A,EGPE:toWorld(ang(90,0,0)))
    holoParent(A,EGPE)
    holoModel(A,"plane")
    holoScale(A,vec(0.55,1.05,1))
    holoDisableShading(A,1)

    A=10
    holoCreate(A)
    holoPos(A,EGPE:toWorld(vec(5.3,-0.13,0)))
    holoAng(A,EGPE:toWorld(ang(90,0,0)))
    holoParent(A,EGPE)
    holoModel(A,"plane")
    holoScale(A,vec(0.55,0.92,1))
    holoMaterial(A,"cubics_pack/ice/ice_operation_buttons")
    holoDisableShading(A,1)

    A=11
    holoCreate(A)
    holoPos(A,EGPE:toWorld(vec(5.3,0,0)))
    holoAng(A,EGPE:toWorld(ang(90,0,0)))
    holoParent(A,EGPE)
    holoModel(A,"plane")
    holoScale(A,vec(0.55,1.05,1))
    holoMaterial(A,"cubics_pack/ice/ice_operation_mode_stars")
    holoDisableShading(A,1)
    
    A=12
    holoCreate(A)
    holoPos(A,EGPE:toWorld(vec(5.3,0,0)))
    holoAng(A,EGPE:toWorld(ang(90,0,0)))
    holoParent(A,EGPE)
    holoModel(A,"plane")
    holoScale(A,vec(0.55,1.05,1))
    holoDisableShading(A,1)

    A=13
    holoCreate(A)
    holoAng(A,EGPE:toWorld(ang(90,0,0)))
    holoParent(A,EGPE)
    holoModel(A,"plane")
    holoScale(A,vec(0.06,0.52,1))
    holoMaterial(A,"cubics_pack/ice/ice_graph_pressure")
    holoDisableShading(A,1)
    
    A=14
    holoCreate(A)
    holoAng(A,EGPE:toWorld(ang(90,0,0)))
    holoParent(A,EGPE)
    holoModel(A,"plane")
    holoScale(A,vec(0.03,0.52,1))
    holoMaterial(A,"cubics_pack/ice/ice_graph_speedo")
    holoDisableShading(A,1)
    holoClipEnabled(A,1,1)
    holoClipEnabled(A,2,1)

    A=15
    holoCreate(A)
    holoPos(A,EGPE:toWorld(vec(5.3,0,0)))
    holoAng(A,EGPE:toWorld(ang(90,0,0)))
    holoParent(A,EGPE)
    holoModel(A,"plane")
    holoScale(A,vec(0.55,1.05,1))
    holoMaterial(A,"cubics_pack/ice/ice_bell_on")
    holoDisableShading(A,1)
    
    A=16
    holoCreate(A)
    holoPos(A,EGPE:toWorld(vec(5.318,0,0)))
    holoAng(A,EGPE:toWorld(ang(90,0,0)))
    holoParent(A,EGPE)
    holoModel(A,"plane")
    holoScale(A,vec(0.547,0.73,1))
    holoDisableShading(A,1)
    
    A=17
    holoCreate(A)
    holoPos(A,EGPE:toWorld(vec(5.3,0,0)))
    holoAng(A,EGPE:toWorld(ang(90,0,0)))
    holoParent(A,EGPE)
    holoModel(A,"plane")
    holoScale(A,vec(0.55,1.05,1))
    holoMaterial(A,"cubics_pack/ice/ice_eot_move")
    holoDisableShading(A,1)
    holoAlpha(A,0)
    
    A=18
    holoCreate(A)
    holoPos(A,EGPE:toWorld(vec(5.3,-0.13,0)))
    holoAng(A,EGPE:toWorld(ang(90,0,0)))
    holoParent(A,EGPE)
    holoModel(A,"plane")
    holoScale(A,vec(0.55,0.92,1))
    holoMaterial(A,"cubics_pack/ice/ice_confirm_selections")
    holoDisableShading(A,1)
    holoAlpha(A,0)
    
    A=19
    holoCreate(A)
    holoPos(A,EGPE:toWorld(vec(5.3,-0.13,0)))
    holoAng(A,EGPE:toWorld(ang(90,0,0)))
    holoParent(A,EGPE)
    holoModel(A,"plane")
    holoScale(A,vec(0.55,0.92,1))
    holoMaterial(A,"cubics_pack/ice/ice_counter_count_down_start_button")
    holoDisableShading(A,1)
    holoAlpha(A,0)
    
    A=20
    holoCreate(A)
    holoPos(A,EGPE:toWorld(vec(5.3,0,1.8)))
    holoAng(A,EGPE:toWorld(ang(90,0,0)))
    holoParent(A,EGPE)
    holoModel(A,"plane")
    holoScale(A,vec(0.05,0.1,1))
    holoMaterial(A,"cubics_pack/numbers/ice/dot")
    holoDisableShading(A,1)
    holoAlpha(A,255)
    holoColor(A,vec(0,255,0))
    
    A=21
    holoCreate(A)
    holoPos(A,EGPE:toWorld(vec(5.3,-0.3,1.8)))
    holoAng(A,EGPE:toWorld(ang(90,0,0)))
    holoParent(A,EGPE)
    holoModel(A,"plane")
    holoScale(A,vec(0.05,0.05,1))
    holoMaterial(A,"cubics_pack/numbers/ice/0")
    holoDisableShading(A,1)
    holoAlpha(A,255)
    holoColor(A,vec(0,255,0))
    
    A=22
    holoCreate(A)
    holoPos(A,EGPE:toWorld(vec(5.3,0.3,1.8)))
    holoAng(A,EGPE:toWorld(ang(90,0,0)))
    holoParent(A,EGPE)
    holoModel(A,"plane")
    holoScale(A,vec(0.05,0.05,1))
    holoMaterial(A,"cubics_pack/numbers/ice/0")
    holoDisableShading(A,1)
    holoAlpha(A,255)
    holoColor(A,vec(0,255,0))

    A=23
    holoCreate(A)
    holoPos(A,EGPE:toWorld(vec(5.3,0,0)))
    holoAng(A,EGPE:toWorld(ang(90,0,0)))
    holoParent(A,EGPE)
    holoModel(A,"plane")
    holoScale(A,vec(0.55,1.05,1))
    holoMaterial(A,"cubics_pack/ice/ice_em_enabled")
    holoDisableShading(A,1)

    A=24
    holoCreate(A)
    holoPos(A,LEGPE:toWorld(vec(5.3,0,2.6)))
    holoAng(A,LEGPE:toWorld(ang(90,0,0)))
    holoParent(A,LEGPE)
    holoModel(A,"plane")
    holoMaterial(A,"cubics_pack/ice/ice_maintenance_menu_lead_css_up")
    holoScale(A,vec(0.55,1.05,1))
    holoDisableShading(A,1)
    holoClipEnabled(A,1,1)
    holoClip(A,1,vec(0.6,0,0),vec(1,0,0),0)
    holoClipEnabled(A,2,1)
    holoClip(A,2,vec(1.2,0,0),vec(-1,0,0),0)

    A=25
    holoCreate(A)
    holoPos(A,LEGPE:toWorld(vec(5.3,-0.13,0)))
    holoAng(A,LEGPE:toWorld(ang(90,0,0)))
    holoParent(A,LEGPE)
    holoModel(A,"plane")
    holoMaterial(A,"cubics_pack/ice/ice_maintenance_menu_button")
    holoScale(A,vec(0.55,0.92,1))
    holoDisableShading(A,1)
    holoClipEnabled(A,1,1)
    holoClip(A,1,vec(),vec(0,1,0),0)
    
    A=27
    holoCreate(A)
    holoPos(A,LEGPE:toWorld(vec(5.3,0,0)))
    holoAng(A,LEGPE:toWorld(ang(90,0,0)))
    holoParent(A,LEGPE)
    holoModel(A,"plane")
    holoMaterial(A,"cubics_pack/ice/ice_maintenance_menu_lead_css_up")
    holoScale(A,vec(0.55,1.05,1))
    holoDisableShading(A,1)
    holoClipEnabled(A,2,1)
    holoClip(A,2,vec(-2,0,0),vec(-1,0,0),0)

    A=28
    holoCreate(A)
    holoPos(A,LEGPE:toWorld(vec(5.3,-0.13,0)))
    holoAng(A,LEGPE:toWorld(ang(90,0,0)))
    holoParent(A,LEGPE)
    holoModel(A,"plane")
    holoMaterial(A,"cubics_pack/ice/ice_maintenance_air_brake_menu")
    holoScale(A,vec(0.55,0.92,1))
    holoDisableShading(A,1)
    
    A=29
    holoCreate(A)
    holoPos(A,LEGPE:toWorld(vec(5.3,-0.13,0)))
    holoAng(A,LEGPE:toWorld(ang(90,0,0)))
    holoParent(A,LEGPE)
    holoModel(A,"plane")
    holoMaterial(A,"cubics_pack/ice/ice_maintenance_air_brake_menu_lead")
    holoScale(A,vec(0.55,0.92,1))
    holoDisableShading(A,1)

    A=30
    holoCreate(A)
    holoPos(A,LEGPE:toWorld(vec(5.3,-0.13,0)))
    holoAng(A,LEGPE:toWorld(ang(90,0,0)))
    holoParent(A,LEGPE)
    holoModel(A,"plane")
    holoMaterial(A,"cubics_pack/ice/ice_maintenance_air_brake_eq_res_setup")
    holoScale(A,vec(0.55,0.92,1))
    holoDisableShading(A,1)

    A=31
    holoCreate(A)
    holoPos(A,LEGPE:toWorld(vec(5.3,-0.13,0)))
    holoAng(A,LEGPE:toWorld(ang(90,0,0)))
    holoParent(A,LEGPE)
    holoModel(A,"plane")
    holoMaterial(A,"cubics_pack/ice/ice_maintenance_air_brake_current_trail")
    holoScale(A,vec(0.55,0.92,1))
    holoDisableShading(A,1)
    
    A=32
    holoCreate(A)
    holoPos(A,LEGPE:toWorld(vec(5.3,-0.13,0)))
    holoAng(A,LEGPE:toWorld(ang(90,0,0)))
    holoParent(A,LEGPE)
    holoModel(A,"plane")
    holoMaterial(A,"cubics_pack/ice/ice_maintenance_air_brake_new_trail")
    holoScale(A,vec(0.55,0.92,1))
    holoDisableShading(A,1)

    A=33
    holoCreate(A)
    holoPos(A,LEGPE:toWorld(vec(5.3,-0.13,0)))
    holoAng(A,LEGPE:toWorld(ang(90,0,0)))
    holoParent(A,LEGPE)
    holoModel(A,"plane")
    holoMaterial(A,"cubics_pack/ice/ice_maintenance_air_brake_current_cut_out")
    holoScale(A,vec(0.55,0.92,1))
    holoDisableShading(A,1)

    A=34
    holoCreate(A)
    holoPos(A,LEGPE:toWorld(vec(5.3,-0.13,0)))
    holoAng(A,LEGPE:toWorld(ang(90,0,0)))
    holoParent(A,LEGPE)
    holoModel(A,"plane")
    holoMaterial(A,"cubics_pack/ice/ice_maintenance_air_brake_new_cut_out")
    holoScale(A,vec(0.55,0.92,1))
    holoDisableShading(A,1)
    
    A=35
    holoCreate(A)
    holoPos(A,LEGPE:toWorld(vec(5.318,0,0)))
    holoAng(A,LEGPE:toWorld(ang(90,0,0)))
    holoParent(A,LEGPE)
    holoModel(A,"plane")
    holoScale(A,vec(0.547,0.73,1))
    holoDisableShading(A,1)
    holoColor(A,vec(0))

    
    EGP:egpText(1,"0",vec2())
    EGP:egpColor(1,vec(0,255,0))
    EGP:egpFont(1,"Marlett")
    EGP:egpSize(1,26)
    
    EGP:egpText(2,"0",vec2())
    EGP:egpColor(2,vec(0,255,0))
    EGP:egpFont(2,"Marlett")
    EGP:egpSize(2,26)
    
    EGP:egpText(3,"0",vec2())
    EGP:egpColor(3,vec(0,255,0))
    EGP:egpFont(3,"Marlett")
    EGP:egpSize(3,26)
    
    EGP:egpText(4,"0",vec2())
    EGP:egpColor(4,vec(0,255,0))
    EGP:egpFont(4,"Marlett")
    EGP:egpSize(4,26)
    
    EGP:egpText(5,"0",vec2())
    EGP:egpColor(5,vec(0,255,0))
    EGP:egpFont(5,"Marlett")
    EGP:egpSize(5,26)
    
    EGP:egpBox(6,vec2(131,85),vec2(10,10))
    EGP:egpAngle(6,45)
    EGP:egpColor(6,vec(0,255,0))

    EGP:egpBox(7,vec2(2.8,-2.8),vec2(14,7))
    EGP:egpParent(7,6)
    EGP:egpAngle(7,45)
    EGP:egpColor(7,vec(0,255,0))
    
    EGP:egpBox(8,vec2(131,85),vec2(14,7))
    EGP:egpColor(8,vec(0,255,0))
    
    EGP:egpBox(9,vec2(131,140),vec2(10,10))
    EGP:egpAngle(9,45)
    EGP:egpColor(9,vec(0,255,0))
    
    EGP:egpBox(10,vec2(-4,4),vec2(14,7))
    EGP:egpParent(10,9)
    EGP:egpAngle(10,45)
    EGP:egpColor(10,vec(0,255,0))
    
    EGP:egpBox(11,vec2(131,85),vec2(14,7))
    EGP:egpColor(11,vec(0,255,0))
    
    EGP:egpText(12,"0",vec2(0,45))
    EGP:egpColor(12,vec(0,255,0))
    EGP:egpFont(12,"Marlett")
    EGP:egpSize(12,26)
    
    EGP:egpBox(13,vec2(375,153),vec2(8,8))
    EGP:egpAngle(13,45)
    EGP:egpColor(13,vec(0,255,0))
    
    EGP:egpBox(14,vec2(375,156),vec2(10,4))
    EGP:egpAngle(14,0)
    EGP:egpColor(14,vec(0,255,0))
    
    EGP:egpText(15,"0 LB",vec2(390,104))
    EGP:egpColor(15,vec(0,255,0))
    EGP:egpFont(15,"Marlett")
    
    EGP:egpBox(16,vec2(375,98),vec2(8,8))
    EGP:egpAngle(16,45)
    EGP:egpColor(16,vec(0,255,0))
    
    EGP:egpBox(17,vec2(375,101),vec2(10,4))
    EGP:egpAngle(17,0)
    EGP:egpColor(17,vec(0,255,0))
    
    EGP:egpText(18,"0000",vec2(380,5))
    EGP:egpColor(18,vec(0,255,255))
    EGP:egpFont(18,"Marlett")
    
    EGP:egpText(19,"*****",vec2(400,33))
    EGP:egpColor(19,vec(0,255,255))
    EGP:egpFont(19,"Marlett")
    EGP:egpSize(19,20)
    
    EGP:egpText(20,"0",vec2(195,430))
    EGP:egpColor(20,vec(255))
    EGP:egpFont(20,"Marlett")
    EGP:egpSize(20,20)
    
    EGP:egpText(21,"0",vec2(195+11,430))
    EGP:egpColor(21,vec(255))
    EGP:egpFont(21,"Marlett")
    EGP:egpSize(21,20)
    
    EGP:egpText(22,"0",vec2(195+22,430))
    EGP:egpColor(22,vec(255))
    EGP:egpFont(22,"Marlett")
    EGP:egpSize(22,20)
    
    EGP:egpText(23,"0",vec2(195+33,430))
    EGP:egpColor(23,vec(255))
    EGP:egpFont(23,"Marlett")
    EGP:egpSize(23,20)
    
    EGP:egpText(24,"0",vec2(195+44,430))
    EGP:egpColor(24,vec(255))
    EGP:egpFont(24,"Marlett")
    EGP:egpSize(24,20)
    
    EGP:egpText(25,"00000",vec2(230,440))
    EGP:egpColor(25,vec(255))
    EGP:egpFont(25,"Marlett")
    EGP:egpSize(25,25)
    
    EGP:egpText(26,"00000",vec2(256,233))
    EGP:egpColor(26,vec(255))
    EGP:egpFont(26,"Marlett")
    EGP:egpSize(26,25)

##########################################                           MAINT

    LEGP:egpBox(27,vec2(0),vec2(0))
    
    LEGP:egpText(28,"90",vec2(90,432))
    LEGP:egpSize(28,14)
    
    LEGP:egpText(29,"90",vec2(90,450))
    LEGP:egpSize(29,14)
    LEGP:egpColor(29,vec(0,255,255))
    
    LEGP:egpText(30,"90",vec2(116,431))
    LEGP:egpSize(30,14)
}
if(On){
interval(300)
RLCPTW=RLCPT:wirelink()
Flow=floor(RLCPTW["CFM",number])
Main=floor(RLCPTW["MainRes",number])
Cyl=floor(RLCPTW["Cyl",number])
BP=floor(RLCPTW["BrakePipe",number])
ER=floor(RLCPTW["EqualRes",number])
WheelSlip=RLCPTW["WheelSlip",number]
Emergency=RLCPTW["Emergency",number]
Sanding=RLCPTW["ForceSand",number]
BrakeWarn=RLCPTW["BrakeWarn",number]
Reverser=RLCPTW["Reverser",number]
Dynamics=RLCPTW["Dynamics",number]
Notch=RLCPTW["Notch",number]
DynaNotch=RLCPTW["DynamicBrakingPower",number]
MPH=RLCPTW["MPH",number]
LBF=RLCPTW["TE_LBF",number]
MP300MS=((MPH/3600)*0.3)
FP300MS=MP300MS*5280
EOTDMPH=EOTD[4,number]
EOTDPSI=floor(EOTD[3,number])
EOTDIDENT=EOTD[6,number]:toString()+EOTD[7,number]:toString()+EOTD[8,number]:toString()+EOTD[9,number]:toString()+EOTD[10,number]:toString()
EGP:egpSetText(26,EOTDIDENT)
if(EOTDIDENT!="00000"){
    holoAlpha(23,255)
}
else{
    holoAlpha(23,0)
}
if(EOTDIDENT!="00000"){
    if(EOTDPSI<10){
        EGP:egpSetText(12,EOTDPSI:toString())
        EGP:egpPos(12,vec2(19,45))  
    }
    elseif(EOTDPSI>=10){
        EGP:egpSetText(12,EOTDPSI:toString())
        EGP:egpPos(12,vec2(19-6,45))
    }
}
else{
    EGP:egpSetText(12,"**")
    EGP:egpPos(12,vec2(19-2,45))
}
if(Flow<10){
    EGP:egpSetText(1,Flow:toString())
    EGP:egpPos(1,vec2(55,45))
}
elseif(Flow>=10){
    EGP:egpSetText(1,Flow:toString())
    EGP:egpPos(1,vec2(55-7,45))
}

if(Main<10){
    EGP:egpSetText(2,Main:toString())
    EGP:egpPos(2,vec2(89,45))
}
elseif(Main>=10&Main<100){
    EGP:egpSetText(2,Main:toString())
    EGP:egpPos(2,vec2(89-7,45))
}
elseif(Main>=100){
    EGP:egpSetText(2,Main:toString())
    EGP:egpPos(2,vec2(89-14,45))
}

if(Cyl<10){
    EGP:egpSetText(3,Cyl:toString())
    EGP:egpPos(3,vec2(124,45))
}
elseif(Cyl>=10){
    EGP:egpSetText(3,Cyl:toString())
    EGP:egpPos(3,vec2(124-7,45))
}

if(BP<10){
    EGP:egpSetText(4,abs(BP):toString())
    EGP:egpPos(4,vec2(19,85))
}
elseif(BP>=10&BP<100){
    EGP:egpSetText(4,abs(BP):toString())
    EGP:egpPos(4,vec2(19-6,85))
}
elseif(BP>=100){
    EGP:egpSetText(4,abs(BP):toString())
    EGP:egpPos(4,vec2(19-12,85))
}

if(ER<10){
    EGP:egpSetText(5,abs(ER):toString())
    EGP:egpPos(5,vec2(19,131))
}
elseif(ER>=10&ER<100){
    EGP:egpSetText(5,abs(ER):toString())
    EGP:egpPos(5,vec2(19-6,131))
}
elseif(ER>=100){
    EGP:egpSetText(5,abs(ER):toString())
    EGP:egpPos(5,vec2(19-12,131))
}
if(BrakeCutIn&LeadBraking){
    holoMaterial(2,"cubics_pack/ice/ice_operation_air_brakes_lead_cut")
    holoMaterial(3,"cubics_pack/ice/ice_in")
}
elseif(!BrakeCutIn&LeadBraking){
    holoMaterial(2,"cubics_pack/ice/ice_operation_air_brakes_lead_cut")
    holoMaterial(3,"cubics_pack/ice/ice_out")
}
elseif(!LeadBraking){
    holoMaterial(2,"cubics_pack/ice/ice_operation_air_brakes_trail")
    holoMaterial(3,"magtrains/invisible")
}
if(Reverser==1&!Dynamics){
    holoMaterial(9,"cubics_pack/ice/ice_forward")
}elseif(Reverser==0&!Dynamics){
    holoMaterial(9,"cubics_pack/ice/ice_neutral")
}elseif(Reverser==-1&!Dynamics){
    holoMaterial(9,"cubics_pack/ice/ice_reverse")
}elseif(Dynamics){
    holoMaterial(9,"cubics_pack/ice/ice_dynamic")
}

if(Dynamics){
    holoMaterial(12,"cubics_pack/ice/ice_operation_dyn_brk_eff")
}
elseif(MPH>0&!Dynamics){
    holoMaterial(12,"cubics_pack/ice/ice_operation_tract_eff_moving")
}
elseif(!Dynamics){
    holoMaterial(12,"cubics_pack/ice/ice_operation_tract_eff_still")
}
holoAlpha(4,WheelSlip*255)
holoAlpha(5,Emergency*255)
holoAlpha(6,Sanding*255)
holoAlpha(7,BrakeWarn*255)
holoAlpha(8,Bell*255)
EGP:egpPos(6,vec2(131+((clamp(BP,55+(EQRes_Set-90),EQRes_Set)-EQRes_Set)*2.35),85))
EGP:egpPos(8,vec2(131+(((clamp(BP,55+(EQRes_Set-90),EQRes_Set)-EQRes_Set)*2.35)/2),82.5))
EGP:egpSize(8,vec2(14+abs(clamp(BP,55+(EQRes_Set-90),EQRes_Set)-EQRes_Set)*1.93,7))
EGP:egpPos(9,vec2(131+((clamp(ER,55+(EQRes_Set-90),EQRes_Set)-EQRes_Set)*2.35),140))
EGP:egpPos(11,vec2(131+(((clamp(ER,55+(EQRes_Set-90),EQRes_Set)-EQRes_Set)*2.35)/2),144.5))
EGP:egpSize(11,vec2(14+abs(clamp(ER,55+(EQRes_Set-90),EQRes_Set)-EQRes_Set)*1.93,8))
if(floor(MPH,1)<1){
    if(floor(MPH,1)<0){
        MPHS="0"+floor(abs(-MPH)*10):toString()
    }
    else{
        MPHS="0"+floor(abs(MPH)*10):toString()
    }
}
elseif(floor(MPH,1)<10){
    MPHS=floor(abs(MPH)*10):toString()
}
else{
    MPHS=floor(abs(MPH)):toString()
}
if(floor(MPH,1)<10&RLCPT){
    holoAlpha(20,255)
    if(MPHS=="0-0"){
        holoMaterial(21,"cubics_pack/numbers/ice/"+MPHS[1])
        holoMaterial(22,"cubics_pack/numbers/ice/"+MPHS[3])
    }
    else{
        holoMaterial(21,"cubics_pack/numbers/ice/"+MPHS[1])
        holoMaterial(22,"cubics_pack/numbers/ice/"+MPHS[2])
    }
}
elseif(floor(MPH,1)>=10&RLCPT){
    holoAlpha(20,0)
    holoMaterial(21,"cubics_pack/numbers/ice/"+MPHS[1])
    holoMaterial(22,"cubics_pack/numbers/ice/"+MPHS[2])
}
elseif(!RLCPT){
    holoAlpha(20,255)
    holoMaterial(21,"cubics_pack/numbers/ice/neg")
    holoMaterial(22,"cubics_pack/numbers/ice/neg")
}
if(Dynamics){
    EGP:egpPos(13,vec2(375+DynaNotch*1.27,153))
    EGP:egpPos(14,vec2(375+((DynaNotch*1.27)/2),156))
    EGP:egpSize(14,vec2(10+DynaNotch*1.28,4))
    EGP:egpColor(13,vec(255,220,0))
    EGP:egpColor(14,vec(255,220,0))
    EGP:egpColor(15,vec(255,220,0))
    EGP:egpColor(16,vec(255,220,0))
    EGP:egpColor(17,vec(255,220,0))
    EGP:egpPos(16,vec2(375+LBF/1350,98))
    EGP:egpPos(17,vec2(375+((LBF/1350)/2),101))
    EGP:egpSize(17,vec2(10+LBF/1310,4))
    holoMaterial(15,"cubics_pack/ice/ice_operation_dynamic")
}
else{
    EGP:egpPos(13,vec2(375+Notch*15.9,153))
    EGP:egpPos(14,vec2(375+((Notch*15.9)/2),156))
    EGP:egpSize(14,vec2(10+Notch*16,4))
    EGP:egpColor(13,vec(0,255,0))
    EGP:egpColor(14,vec(0,255,0))
    EGP:egpColor(15,vec(0,255,0))
    EGP:egpColor(16,vec(0,255,0))
    EGP:egpColor(17,vec(0,255,0))
    EGP:egpPos(16,vec2(375+LBF/2030,98))
    EGP:egpPos(17,vec2(375+((LBF/2030)/2),101))
    EGP:egpSize(17,vec2(10+LBF/2002,4))
    holoMaterial(15,"cubics_pack/ice/ice_operation_throttle")
}
holoPos(14,EGPE:toWorld(vec(5.22,1.63-MPH/24.5,2.68)))
holoClip(14,1,vec(0,-0.6+MPH/24.5,0),vec(0,-1,0),0)
holoClip(14,2,vec(0,-2.6+MPH/24.5,0),vec(0,1,0),0)
holoColor(16,vec4(0,0,0,0))
holoAlpha(35,0)
}
else{
holoColor(16,vec4(0,0,0,255))
holoAlpha(35,255)
}
EGP:egpSetText(15,round(LBF,-3):toString()+" LB")
EGP:egpSetText(18,Num)
holoAlpha(17,EOTDMPH*200000)
runOnChat(1)
LastSaid=owner():lastSaid()
if(chatClk(owner())){
if(LastSaid==".ob4"&ButtonMenu==0){
    hideChat(1)
    ButtonMenu=1
    holoMaterial(10,"cubics_pack/ice/ice_controls_menu")
}
if(LastSaid==".ob6"&ButtonMenu==0){
    hideChat(1)
    ButtonMenu=2
    holoMaterial(10,"cubics_pack/ice/ice_counter_menu")
}
if(LastSaid==".ob3"&ButtonMenu==2){
    hideChat(1)
    ButtonMenu=3
    holoMaterial(10,"cubics_pack/ice/ice_counter_train_lenth_or_manual_entry")
}
if(LastSaid==".ob1"){
    Confirm=0
    hideChat(1)
    ButtonMenu=0
    holoMaterial(10,"cubics_pack/ice/ice_operation_buttons")
}
if(LastSaid==".ob2"&ButtonMenu==3){
    Digit1++
    if(Digit1>9){
        Digit1=0
    }
}
if(LastSaid==".ob3"&ButtonMenu==3){
    Digit2++
    if(Digit2>9){
        Digit2=0
    }
}
if(LastSaid==".ob4"&ButtonMenu==3){
    Digit3++
    if(Digit3>9){
        Digit3=0
    }
}
if(LastSaid==".ob5"&ButtonMenu==3){
    Digit4++
    if(Digit4>9){
        Digit4=0
    }
}
if(LastSaid==".ob6"&ButtonMenu==3){
    Digit5++
    if(Digit5>9){
        Digit5=0
    }
}
if(LastSaid==".ob7"&ButtonMenu==3&Confirm){
    Confirm=0
    TrainLength=Digit1:toString()+Digit2:toString()+Digit3:toString()+Digit4:toString()+Digit5:toString()
}
if(LastSaid==".ob7"&ButtonMenu==3){
    timer("offdelay",5000)
    if(clk("offdelay")){
        Confirm=0
        stoptimer("offdelay")
    }
    Confirm=1
}
if(LastSaid==".ob5"&ButtonMenu==2){
    ButtonMenu=4
    holoMaterial(10,"cubics_pack/ice/ice_counter_count_down_menu")
}
if(LastSaid==".ob3"&ButtonMenu==4){
    ButtonMenu=5
    holoMaterial(10,"cubics_pack/ice/ice_counter_count_down_active")
    holoAlpha(19,255)
}
if(LastSaid==".ob5"&ButtonMenu==5){
    FTCountOn=!FTCountOn
}
if(LastSaid==".ob7"&ButtonMenu==5){
    FTCount=0
}
if(LastSaid==".ob8"&ButtonMenu==5){
    Confirm=0
    hideChat(1)
    ButtonMenu=0
    holoMaterial(10,"cubics_pack/ice/ice_operation_buttons")
    holoAlpha(19,0)
}
if(LastSaid==".ob7"&ButtonMenu==1&Confirm){
    Confirm=0
    entity():deleteWire("EOTD")
}
if(LastSaid==".ob7"&ButtonMenu==1){
    timer("offdelay",5000)
    if(clk("offdelay")){
        Confirm=0
        stoptimer("offdelay")
    }
    Confirm=1
}
}
if(FTCountOn){
    FTCount+=FP300MS
}
if(ButtonMenu==5&FTCount<10){
    EGP:egpAlpha(25,255)
    EGP:egpSetText(25,"0000"+floor(FTCount):toString())
}
elseif(ButtonMenu==5&FTCount<100){
    EGP:egpAlpha(25,255)
    EGP:egpSetText(25,"000"+floor(FTCount):toString())
}
elseif(ButtonMenu==5&FTCount<1000){
    EGP:egpAlpha(25,255)
    EGP:egpSetText(25,"00"+floor(FTCount):toString())
}
elseif(ButtonMenu==5&FTCount<10000){
    EGP:egpAlpha(25,255)
    EGP:egpSetText(25,"0"+floor(FTCount):toString())
}
elseif(ButtonMenu==5&FTCount<100000){
    EGP:egpAlpha(25,255)
    EGP:egpSetText(25,floor(FTCount):toString())
}
elseif(ButtonMenu!=5){
    EGP:egpAlpha(25,0)
}
if(ButtonMenu==3){
    EGP:egpAlpha(20,255)
    EGP:egpAlpha(21,255)
    EGP:egpAlpha(22,255)
    EGP:egpAlpha(23,255)
    EGP:egpAlpha(24,255)
    EGP:egpSetText(20,Digit1:toString())
    EGP:egpSetText(21,Digit2:toString())
    EGP:egpSetText(22,Digit3:toString())
    EGP:egpSetText(23,Digit4:toString())
    EGP:egpSetText(24,Digit5:toString())
}
else{
    EGP:egpAlpha(20,0)
    EGP:egpAlpha(21,0)
    EGP:egpAlpha(22,0)
    EGP:egpAlpha(23,0)
    EGP:egpAlpha(24,0)
}
EGP:egpSetText(19,TrainLength)
holoAlpha(18,Confirm*255)
if(CabSignal&MU_Master){
    holoMaterial(11,"cubics_pack/ice/ice_operation_mode_non_cab")
}
elseif(CabSignal&!MU_Master){
    holoMaterial(11,"cubics_pack/ice/ice_operation_mode_trail_unit")
}
else{
    holoMaterial(11,"cubics_pack/ice/ice_operation_mode_stars")
}
EGP:egpLine(27,vec2(256,69),vec2(256+clamp(Acceleration*20,-60,60),69))
EGP:egpColor(27,vec(0,255,0))
EGP:egpSize(27,2)
if(MButtonMenu==0){
    LEGP:egpAlpha(28,0)
    LEGP:egpAlpha(29,0)
    LEGP:egpAlpha(30,0)
    if(LastSaid==".mb7"&chatClk(owner())){
        MButtonMenu=1
    }
    holoAlpha(24,255)
    holoAlpha(25,255)
    holoAlpha(26,255)
    holoAlpha(27,255)
    holoAlpha(28,0)
    holoAlpha(29,0)
    holoAlpha(30,0)
    holoAlpha(31,0)
    holoAlpha(32,0)
    holoAlpha(33,0)
    holoAlpha(34,0)
}
if(MButtonMenu==1){
    LEGP:egpAlpha(28,255)
    LEGP:egpAlpha(29,255)
    LEGP:egpAlpha(30,0)
    if(LastSaid==".mb1"&chatClk(owner())){
        MButtonMenu=0
    }
    if(LastSaid==".mb2"&chatClk(owner())){
        MButtonMenu=2
    }
    if(LastSaid==".mb3"&chatClk(owner())){
        PossibleLead=!PossibleLead
    }
    if(LastSaid==".mb4"&chatClk(owner())){
        PossibleCutIn=!PossibleCutIn
    }
    if(PossibleLead){holoMaterial(32,"cubics_pack/ice/ice_maintenance_air_brake_new_lead")}else{holoMaterial(32,"cubics_pack/ice/ice_maintenance_air_brake_new_trail")}
    if(PossibleCutIn){holoMaterial(34,"cubics_pack/ice/ice_maintenance_air_brake_new_cut_in")}else{holoMaterial(34,"cubics_pack/ice/ice_maintenance_air_brake_new_cut_out")}
    
    if(LeadBraking){holoMaterial(31,"cubics_pack/ice/ice_maintenance_air_brake_current_lead")}else{holoMaterial(31,"cubics_pack/ice/ice_maintenance_air_brake_current_trail")}
    if(BrakeCutIn){holoMaterial(33,"cubics_pack/ice/ice_maintenance_air_brake_current_cut_in")}else{holoMaterial(33,"cubics_pack/ice/ice_maintenance_air_brake_current_cut_out")}
    holoAlpha(24,0)
    holoAlpha(25,0)
    holoAlpha(26,0)
    holoAlpha(27,0)
    holoAlpha(28,255)
    holoAlpha(29,255)
    holoAlpha(30,0)
    holoAlpha(31,255)
    holoAlpha(32,255)
    holoAlpha(33,255)
    holoAlpha(34,255)
    if(LastSaid==".mb7"&chatClk(owner())){
        LeadBraking=PossibleLead
        BrakeCutIn=PossibleCutIn
        EQRes_Set=PossibleEQRes_Set
    }
    LEGP:egpSetText(28,PossibleEQRes_Set:toString())
    LEGP:egpSetText(29,EQRes_Set:toString())
}
if(MButtonMenu==2){
    LEGP:egpAlpha(28,0)
    LEGP:egpAlpha(29,0)
    LEGP:egpAlpha(30,255)
    if(LastSaid==".mb1"&chatClk(owner())){
        MButtonMenu=1
    }
    if(LastSaid==".mb2"&chatClk(owner())){
        PossibleEQRes_Set2--
    }
    if(LastSaid==".mb3"&chatClk(owner())){
        PossibleEQRes_Set2++
    }
    if(LastSaid==".mb4"&chatClk(owner())){
        PossibleEQRes_Set2=80
    }
    if(LastSaid==".mb5"&chatClk(owner())){
        PossibleEQRes_Set2=90
    }
    if(LastSaid==".mb6"&chatClk(owner())){
        PossibleEQRes_Set2=100
    }
    if(LastSaid==".mb7"&chatClk(owner())){
        PossibleEQRes_Set2=110
    }
    if(LastSaid==".mb8"&chatClk(owner())){
        PossibleEQRes_Set=PossibleEQRes_Set2
        MButtonMenu=1
    }
    holoAlpha(25,0)
    holoAlpha(26,0)
    holoAlpha(28,0)
    holoAlpha(29,0)
    holoAlpha(30,255)
    holoAlpha(31,0)
    holoAlpha(32,0)
    holoAlpha(33,0)
    holoAlpha(34,0)
    if(PossibleEQRes_Set2<100){
        LEGP:egpPos(30,vec2(130,431))
    }
    else{
        LEGP:egpPos(30,vec2(126,431))
    }
    LEGP:egpSetText(30,PossibleEQRes_Set2:toString())    
}
if(On&~On){
    EGPE:soundPlay(1,0,"gsgtrainsounds/misc/steamgen_burner_loop.wav")
    soundStop(2)
    soundVolume(1,0.1)
}
elseif(!On&~On){
    EGPE:soundPlay(2,0,"gsgtrainsounds/misc/steamgen_burner_end.wav")
    soundStop(1)
    soundVolume(2,0.1)
}
holoPos(13,EGPE:toWorld(vec(5.3,-3.57-((EQRes_Set-90)/25),1.9)))
holoClipEnabled(13,1,1)
holoClip(13,1,vec(0,-0.03+((EQRes_Set-90)/25),0),vec(0,1,0),0)#-0.03
holoClipEnabled(13,2,1)
holoClip(13,2,vec(0,1.63+((EQRes_Set-90)/25),0),vec(0,-1,0),0)

holoAlpha(2,On*255)
holoAlpha(3,On*255)
holoAlpha(9,On*255)
holoAlpha(12,On*255)
